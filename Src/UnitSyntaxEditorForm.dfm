object FormSyntaxEditorForm: TFormSyntaxEditorForm
  Left = 0
  Top = 0
  Caption = 'SyntaxEditor'
  ClientHeight = 563
  ClientWidth = 884
  Color = clBtnFace
  DefaultMonitor = dmMainForm
  Font.Charset = DEFAULT_CHARSET
  Font.Color = clWindowText
  Font.Height = -11
  Font.Name = 'Tahoma'
  Font.Style = []
  OldCreateOrder = False
  Position = poScreenCenter
  OnClose = FormClose
  OnCloseQuery = FormCloseQuery
  OnDeactivate = FormDeactivate
  PixelsPerInch = 96
  TextHeight = 13
  object Panel1: TPanel
    AlignWithMargins = True
    Left = 3
    Top = 519
    Width = 878
    Height = 41
    Align = alBottom
    Caption = 'Panel1'
    ShowCaption = False
    TabOrder = 0
    object BtnCancel: TButton
      AlignWithMargins = True
      Left = 160
      Top = 4
      Width = 150
      Height = 33
      Align = alLeft
      Caption = 'CANCEL'
      ImageIndex = 6
      ImageMargins.Left = 5
      Images = ImageList1
      ModalResult = 2
      TabOrder = 0
    end
    object BtnOk: TButton
      AlignWithMargins = True
      Left = 4
      Top = 4
      Width = 150
      Height = 33
      Action = ActionSave
      Align = alLeft
      ImageMargins.Left = 5
      Images = ImageList1
      ModalResult = 1
      TabOrder = 1
    end
    object BtnOpen: TButton
      AlignWithMargins = True
      Left = 363
      Top = 4
      Width = 150
      Height = 33
      Margins.Left = 50
      Action = FileOpen1
      Align = alLeft
      ImageMargins.Left = 5
      Images = ImageList1
      TabOrder = 2
    end
    object BtnSave: TButton
      AlignWithMargins = True
      Left = 519
      Top = 4
      Width = 150
      Height = 33
      Action = FileSaveAs1
      Align = alLeft
      ImageMargins.Left = 5
      Images = ImageList1
      TabOrder = 3
    end
    object CheckSwitchToDocPanel: TCheckBox
      AlignWithMargins = True
      Left = 675
      Top = 4
      Width = 118
      Height = 33
      Align = alLeft
      Caption = 'Switch to doc panel'
      TabOrder = 4
      OnClick = CheckSwitchToDocPanelClick
    end
  end
  object ActionList1: TActionList
    Images = ImageList1
    Left = 40
    Top = 80
    object FileOpen1: TFileOpen
      Category = 'File'
      Caption = '&Open...'
      Dialog.Filter = 'All files (*.*)|*.*'
      Dialog.Options = [ofHideReadOnly, ofFileMustExist, ofEnableSizing]
      Hint = 'Open|Opens an existing file'
      ImageIndex = 0
      OnAccept = FileOpen1Accept
    end
    object FileSaveAs1: TFileSaveAs
      Category = 'File'
      Caption = 'Save &As...'
      Dialog.Filter = 'All files (*.*)|*.*'
      Dialog.Options = [ofOverwritePrompt, ofHideReadOnly, ofEnableSizing]
      Hint = 'Save As|Saves the active file with a new name'
      ImageIndex = 2
      OnAccept = FileSaveAs1Accept
    end
    object ActionSave: TAction
      Caption = 'OK'
      ImageIndex = 4
      ShortCut = 16467
      OnExecute = ActionSaveExecute
    end
  end
  object ImageList1: TImageList
    Left = 40
    Top = 152
    Bitmap = {
      494C010122004000440110001000FFFFFFFFFF10FFFFFFFFFFFFFFFF424D3600
      0000000000003600000028000000400000009000000001002000000000000090
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000993300009933
      0000993300000000000000000000000000000000000000000000993300009933
      0000993300009933000000000000000000000000000099999900999999009999
      9900999999000000000000000000000000000000000000000000999999009999
      9900999999009999990000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000CC660000CC66
      0000CC6600009933000000000000000000000000000099330000CC660000CC66
      0000CC6600009933000000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC009999990000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC009999990000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000099330000CC66
      0000CC660000CC660000993300000000000099330000CC660000CC660000CC66
      000099330000000000000000000000000000000000000000000099999900CCCC
      CC00CCCCCC00CCCCCC00999999000000000099999900CCCCCC00CCCCCC00CCCC
      CC00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000009933
      0000CC660000CC660000CC66000099330000CC660000CC660000CC6600009933
      0000000000000000000000000000000000000000000000000000000000009999
      9900CCCCCC00CCCCCC00CCCCCC0099999900CCCCCC00CCCCCC00CCCCCC009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000099330000CC660000CC660000CC660000CC660000CC660000993300000000
      0000000000000000000000000000000000000000000000000000000000000000
      000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000099330000CC660000CC660000CC66000099330000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000099999900CCCCCC00CCCCCC00CCCCCC0099999900000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000099330000CC660000CC660000CC660000CC660000CC660000993300000000
      0000000000000000000000000000000000000000000000000000000000000000
      000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000009933
      0000CC660000CC660000CC66000099330000CC660000CC660000CC6600009933
      0000000000000000000000000000000000000000000000000000000000009999
      9900CCCCCC00CCCCCC00CCCCCC0099999900CCCCCC00CCCCCC00CCCCCC009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000099330000CC66
      0000CC660000CC660000993300000000000099330000CC660000CC660000CC66
      000099330000000000000000000000000000000000000000000099999900CCCC
      CC00CCCCCC00CCCCCC00999999000000000099999900CCCCCC00CCCCCC00CCCC
      CC00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000CC660000CC66
      0000CC6600009933000000000000000000000000000099330000CC660000CC66
      0000CC6600009933000000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC009999990000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC009999990000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000993300009933
      0000993300000000000000000000000000000000000000000000993300009933
      0000993300009933000000000000000000000000000099999900999999009999
      9900999999000000000000000000000000000000000000000000999999009999
      9900999999009999990000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000009933000099330000000000009933
      0000993300000000000099330000993300000000000000000000000000000000
      0000000000000000000000000000000000009999990099999900000000009999
      990099999900000000009999990099999900000000000000000000000000CC99
      6600CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC996600CC996600CC996600CC9966000000000000000000000000009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      000000000000000000000000000000000000CC6600009933000000000000CC66
      00009933000000000000CC660000993300000000000000000000000000000000
      000000000000000000000000000000000000B2B2B2009999990000000000B2B2
      B2009999990000000000B2B2B20099999900000000000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      00000000000000000000000000000000FF000000800000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000B2B2B2009999990000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      000000000000000000000000FF00000099000000990000008000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      99000000000000000000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC000000000000000000999999000000000000000000000000000000
      000000000000000000000000FF00000099000000800000009900000080000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900999999000000
      000000000000000000000000000000000000000099000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966009999990000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      000000000000000000000000FF00000099000000990000008000000099000000
      8000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900999999009999
      9900000000000000000000000000000000000000CC000000990000000000CC99
      6600FFFFFF009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC996600B2B2B20099999900000000009999
      9900000000009999990099999900999999009999990099999900999999009999
      9900999999009999990000000000999999000000000000000000000000000000
      000000000000FFFFFF00CC9966000000990000009900000099000000FF000000
      9900000080000000000000000000000000000000000000000000000000000000
      000000000000FFFFFF0099999900999999009999990099999900B2B2B2009999
      9900999999000000000000000000000000000000FF000000CC0000009900CC99
      6600FFFFFF0099330000CC996600CC996600CC996600CC996600CC996600CC99
      6600CC99660099330000FFFFFF00CC996600CCCCCC00B2B2B200999999009999
      99000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC009999990000000000999999000000000000000000000000000000
      000000000000FFFFFF00FFCC9900FFCC9900000099000000FF000000FF000000
      FF00000099000000800000000000000000000000000000000000000000000000
      000000000000FFFFFF00CCCCCC00CCCCCC0099999900B2B2B200B2B2B200B2B2
      B200999999009999990000000000000000000000FF000000CC0000000000CC99
      6600FFFFFF009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC996600CCCCCC00B2B2B200000000009999
      9900000000009999990099999900999999009999990099999900999999009999
      9900999999009999990000000000999999000000000000000000000000000000
      0000FFFFFF00FFCC9900FFCC9900FFFFFF00FFFFFF000000FF003399FF003399
      FF003399FF000000990000000000000000000000000000000000000000000000
      0000FFFFFF00CCCCCC00CCCCCC00FFFFFF00FFFFFF00B2B2B200CCCCCC00CCCC
      CC00CCCCCC009999990000000000000000000000FF000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC996600CCCCCC0000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000099999900000000000000000000000000FFFF
      FF00FFCC9900FFCC9900FFFFFF00FFFFFF00FFFFFF00FFFFFF00000099000000
      990000009900000000000000000000000000000000000000000000000000FFFF
      FF00CCCCCC00CCCCCC00FFFFFF00FFFFFF00FFFFFF00FFFFFF00999999009999
      990099999900000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      99000000000000000000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC000000000000000000999999000000000000000000FFFFFF00FFCC
      9900FFCC9900FFFFFF00FFFFFF00FFFFFF00CC996600CC996600000000000000
      0000000000000000000000000000000000000000000000000000FFFFFF00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00FFFFFF009999990099999900000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000009999990000000000FFFFFF00FFCC9900FFCC
      9900FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000000000
      00000000000000000000000000000000000000000000FFFFFF00CCCCCC00CCCC
      CC00FFFFFF00FFFFFF00FFFFFF00999999000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      99000000000000000000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00000000000000000099999900FFFFFF00FFCC9900FFCC9900FFFF
      FF00FFFFFF00FFFFFF00CC9966000000FF000000000000000000000000000000
      000000000000000000000000000000000000FFFFFF00CCCCCC00CCCCCC00FFFF
      FF00FFFFFF00FFFFFF0099999900B2B2B2000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000099999900CC996600FFCC9900FFFFFF00FFFF
      FF00FFFFFF00CC9966000000FF00000000000000000000000000000000000000
      00000000000000000000000000000000000099999900CCCCCC00FFFFFF00FFFF
      FF00FFFFFF0099999900B2B2B200000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      99000000000000000000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC0000000000000000009999990000000000CC996600FFFFFF00FFFF
      FF00CC9966000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900FFFFFF00FFFF
      FF00999999000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000CC996600CC99
      6600000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000999999009999
      9900000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC996600CC996600CC996600CC9966000000000000000000000000009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000993300009933
      0000993300009933000099330000993300000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000CC660000CC66
      0000CC660000CC660000CC660000993300000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      00000000000000000000000000000000FF000000800000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000B2B2B2009999990000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000FF00000080000000000099330000CC66
      0000CC660000CC66000099330000000000000000000000000000000000000000
      0000000000000000000000000000B2B2B200999999000000000099999900CCCC
      CC00CCCCCC00CCCCCC0099999900000000000000000000000000000000000000
      000000000000000000000000FF00000099000000990000008000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000FF00000099000000990000008000000000009933
      0000CC6600009933000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900000000009999
      9900CCCCCC009999990000000000000000000000000000000000000000000000
      000000000000000000000000FF00000099000000800000009900000080000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000FF00000099000000800000009900000080000000
      0000993300000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900999999000000
      0000999999000000000000000000000000000000000000000000000000000000
      000000000000000000000000FF00000099000000990000008000000099000000
      8000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900999999009999
      9900000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000FF00000099000000990000008000000099000000
      8000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000B2B2B200999999009999990099999900999999009999
      9900000000000000000000000000000000000000000000000000000000000000
      000000000000FFFFFF00CC9966000000990000009900000099000000FF000000
      9900000080000000000000000000000000000000000000000000000000000000
      000000000000FFFFFF0099999900999999009999990099999900B2B2B2009999
      9900999999000000000000000000000000000000000000000000000000000000
      000000000000FFFFFF00CC9966000000990000009900000099000000FF000000
      9900000080000000000000000000000000000000000000000000000000000000
      000000000000FFFFFF0099999900999999009999990099999900B2B2B2009999
      9900999999000000000000000000000000000000000000000000000000000000
      000000000000FFFFFF00FFCC9900FFCC9900000099000000FF000000FF000000
      FF00000099000000800000000000000000000000000000000000000000000000
      000000000000FFFFFF00CCCCCC00CCCCCC0099999900B2B2B200B2B2B200B2B2
      B200999999009999990000000000000000000000000000000000000000000000
      000000000000FFFFFF00FFCC9900FFCC9900000099000000FF000000FF000000
      FF00000099000000800000000000000000000000000000000000000000000000
      000000000000FFFFFF00CCCCCC00CCCCCC0099999900B2B2B200B2B2B200B2B2
      B200999999009999990000000000000000000000000000000000000000000000
      0000FFFFFF00FFCC9900FFCC9900FFFFFF00FFFFFF000000FF003399FF003399
      FF003399FF000000990000000000000000000000000000000000000000000000
      0000FFFFFF00CCCCCC00CCCCCC00FFFFFF00FFFFFF00B2B2B200CCCCCC00CCCC
      CC00CCCCCC009999990000000000000000000000000000000000000000000000
      0000FFFFFF00FFCC9900FFCC9900FFFFFF00FFFFFF000000FF003399FF003399
      FF003399FF000000990000000000000000000000000000000000000000000000
      0000FFFFFF00CCCCCC00CCCCCC00FFFFFF00FFFFFF00B2B2B200CCCCCC00CCCC
      CC00CCCCCC00999999000000000000000000000000000000000000000000FFFF
      FF00FFCC9900FFCC9900FFFFFF00FFFFFF00FFFFFF00FFFFFF00000099000000
      990000009900000000000000000000000000000000000000000000000000FFFF
      FF00CCCCCC00CCCCCC00FFFFFF00FFFFFF00FFFFFF00FFFFFF00999999009999
      990099999900000000000000000000000000000000000000000000000000FFFF
      FF00FFCC9900FFCC9900FFFFFF00FFFFFF00FFFFFF00FFFFFF00000099000000
      990000009900000000000000000000000000000000000000000000000000FFFF
      FF00CCCCCC00CCCCCC00FFFFFF00FFFFFF00FFFFFF00FFFFFF00999999009999
      9900999999000000000000000000000000000000000000000000FFFFFF00FFCC
      9900FFCC9900FFFFFF00FFFFFF00FFFFFF00CC996600CC996600000000000000
      0000000000000000000000000000000000000000000000000000FFFFFF00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00FFFFFF009999990099999900000000000000
      0000000000000000000000000000000000000000000000000000FFFFFF00FFCC
      9900FFCC9900FFFFFF00FFFFFF00FFFFFF00CC996600CC996600000000000000
      0000000000000000000000000000000000000000000000000000FFFFFF00CCCC
      CC00CCCCCC00FFFFFF00FFFFFF00FFFFFF009999990099999900000000000000
      00000000000000000000000000000000000000000000FFFFFF00FFCC9900FFCC
      9900FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000000000
      00000000000000000000000000000000000000000000FFFFFF00CCCCCC00CCCC
      CC00FFFFFF00FFFFFF00FFFFFF00999999000000000000000000000000000000
      00000000000000000000000000000000000000000000FFFFFF00FFCC9900FFCC
      9900FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000000000
      00000000000000000000000000000000000000000000FFFFFF00CCCCCC00CCCC
      CC00FFFFFF00FFFFFF00FFFFFF00999999000000000000000000000000000000
      000000000000000000000000000000000000FFFFFF00FFCC9900FFCC9900FFFF
      FF00FFFFFF00FFFFFF00CC9966000000FF000000000000000000000000000000
      000000000000000000000000000000000000FFFFFF00CCCCCC00CCCCCC00FFFF
      FF00FFFFFF00FFFFFF0099999900B2B2B2000000000000000000000000000000
      000000000000000000000000000000000000FFFFFF00FFCC9900FFCC9900FFFF
      FF00FFFFFF00FFFFFF00CC9966000000FF000000000000000000000000000000
      000000000000000000000000000000000000FFFFFF00CCCCCC00CCCCCC00FFFF
      FF00FFFFFF00FFFFFF0099999900B2B2B2000000000000000000000000000000
      000000000000000000000000000000000000CC996600FFCC9900FFFFFF00FFFF
      FF00FFFFFF00CC9966000000FF00000000000000000000000000000000000000
      00000000000000000000000000000000000099999900CCCCCC00FFFFFF00FFFF
      FF00FFFFFF0099999900B2B2B200000000000000000000000000000000000000
      000000000000000000000000000000000000CC996600FFCC9900FFFFFF00FFFF
      FF00FFFFFF00CC9966000000FF00000000000000000000000000000000000000
      00000000000000000000000000000000000099999900CCCCCC00FFFFFF00FFFF
      FF00FFFFFF0099999900B2B2B200000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00CC9966000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900FFFFFF00FFFF
      FF00999999000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00CC9966000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900FFFFFF00FFFF
      FF00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000CC996600CC99
      6600000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000999999009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000CC996600CC99
      6600000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000999999009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600CC996600CC99
      6600CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC996600CC996600CC996600CC9966000000000099999900999999009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000099999900FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF009933
      0000993300009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900999999009999990099999900999999009999990099999900999999009999
      99009999990099999900FFFFFF00999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF009933
      0000CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC99660099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC0099999900FFFFFF00999999000000000000000000000000009933
      0000CC9966000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000009999
      9900CCCCCC000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF009933
      0000993300009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900999999009999990099999900999999009999990099999900999999009999
      99009999990099999900FFFFFF00999999000000000000000000CC9966009933
      0000000000000000000000000000000000000000000099330000993300009933
      0000993300009933000000000000000000000000000000000000CCCCCC009999
      9900000000000000000000000000000000000000000099999900999999009999
      99009999990099999900000000000000000000000000CC996600FFFFFF009933
      0000CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC99660099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC0099999900FFFFFF00999999000000000000000000993300000000
      0000000000000000000000000000000000000000000000000000993300009933
      0000993300009933000000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000999999009999
      99009999990099999900000000000000000000000000CC996600FFFFFF009933
      0000993300009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900999999009999990099999900999999009999990099999900999999009999
      99009999990099999900FFFFFF00999999000000000000000000993300000000
      0000000000000000000000000000000000000000000000000000000000009933
      0000993300009933000000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000000000009999
      99009999990099999900000000000000000000000000CC996600FFFFFF009933
      0000CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC99660099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC0099999900FFFFFF00999999000000000000000000993300000000
      0000000000000000000000000000000000000000000000000000993300000000
      0000993300009933000000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000999999000000
      00009999990099999900000000000000000000000000CC996600FFFFFF009933
      0000993300009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900999999009999990099999900999999009999990099999900999999009999
      99009999990099999900FFFFFF00999999000000000000000000CC9966009933
      0000000000000000000000000000000000009933000099330000000000000000
      0000000000009933000000000000000000000000000000000000CCCCCC009999
      9900000000000000000000000000000000009999990099999900000000000000
      00000000000099999900000000000000000000000000CC996600FFFFFF009933
      0000CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC99660099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC0099999900FFFFFF0099999900000000000000000000000000CC99
      6600993300009933000099330000993300000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CCCC
      CC00999999009999990099999900999999000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF009933
      0000993300009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900999999009999990099999900999999009999990099999900999999009999
      99009999990099999900FFFFFF00999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF009933
      0000CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC99660099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC0099999900FFFFFF00999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF009933
      0000993300009933000099330000993300009933000099330000993300009933
      00009933000099330000FFFFFF00CC9966000000000099999900FFFFFF009999
      9900999999009999990099999900999999009999990099999900999999009999
      99009999990099999900FFFFFF00999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000099999900FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC996600CC996600CC99
      6600CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC996600CC996600CC996600CC9966000000000099999900999999009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      0000000000000000000000000000CC996600CC996600CC996600CC996600CC99
      6600CC996600CC996600CC996600CC9966000000000000000000000000000000
      0000000000000000000000000000999999009999990099999900999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000006699000066
      9900006699000066990000669900CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000000000000999999009999
      9900999999009999990099999900999999000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000003399CC0099FFFF0099FF
      FF0099FFFF0099FFFF0099FFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000003399CC00CCFFFF0099FF
      FF0099FFFF0099FFFF0099FFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000003399CC0099FFFF00CCFF
      FF0099FFFF0099FFFF0099FFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CC99
      6600993300000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000CCCC
      CC0099999900000000000000000000000000000000003399CC00CCFFFF0099FF
      FF00CCFFFF0099FFFF0099FFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00CC9966000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000000000000000000000000000999999000000000000000000993300009933
      0000993300009933000099330000000000000000000000000000000000000000
      000099330000CC99660000000000000000000000000000000000999999009999
      9900999999009999990099999900000000000000000000000000000000000000
      000099999900CCCCCC000000000000000000000000003399CC0099FFFF00CCFF
      FF0099FFFF00CCFFFF0099FFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00CC996600CC996600CC996600CC9966000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000999999009999990099999900999999000000000000000000993300009933
      0000993300009933000000000000000000000000000000000000000000000000
      0000000000009933000000000000000000000000000000000000999999009999
      9900999999009999990000000000000000000000000000000000000000000000
      000000000000999999000000000000000000000000003399CC00CCFFFF0099FF
      FF00CCFFFF0099FFFF00CCFFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00CC996600E5E5E500CC996600000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000999999000000000099999900000000000000000000000000993300009933
      0000993300000000000000000000000000000000000000000000000000000000
      0000000000009933000000000000000000000000000000000000999999009999
      9900999999000000000000000000000000000000000000000000000000000000
      000000000000999999000000000000000000000000003399CC0099FFFF00CCFF
      FF0099FFFF00CCFFFF0099FFFF00CC996600FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00CC996600CC99660000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999000000000000000000000000000000
      0000999999009999990000000000000000000000000000000000993300009933
      0000000000009933000000000000000000000000000000000000000000000000
      0000000000009933000000000000000000000000000000000000999999009999
      9900000000009999990000000000000000000000000000000000000000000000
      000000000000999999000000000000000000000000003399CC00CCFFFF0099FF
      FF00CCFFFF0099FFFF00CCFFFF00CC996600CC996600CC996600CC996600CC99
      6600CC9966000000000000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00999999009999990099999900999999009999
      9900999999000000000000000000000000000000000000000000993300000000
      0000000000000000000099330000993300000000000000000000000000000000
      000099330000CC99660000000000000000000000000000000000999999000000
      0000000000000000000099999900999999000000000000000000000000000000
      000099999900CCCCCC000000000000000000000000003399CC00CCFFFF00CCFF
      FF0099FFFF00CCFFFF0099FFFF00CCFFFF0099FFFF00CCFFFF0099FFFF0099FF
      FF00006699000000000000000000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000009933000099330000993300009933
      0000CC9966000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000009999990099999900999999009999
      9900CCCCCC00000000000000000000000000000000003399CC00CCFFFF00CCFF
      FF00CC6600009933000099330000993300009933000099330000CCFFFF0099FF
      FF00006699000000000000000000000000000000000099999900CCCCCC00CCCC
      CC00999999009999990099999900999999009999990099999900CCCCCC00CCCC
      CC00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000003399CC00CCFFFF00CCFF
      FF00CC660000FFFFFF00FF990000FF990000FF9900009933000099FFFF00CCFF
      FF00006699000000000000000000000000000000000099999900CCCCCC00CCCC
      CC0099999900FFFFFF00CCCCCC00CCCCCC00CCCCCC0099999900CCCCCC00CCCC
      CC00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000000000003399CC003399
      CC003399CC00CC660000FFFFFF00FF990000993300003399CC003399CC003399
      CC00000000000000000000000000000000000000000000000000999999009999
      99009999990099999900FFFFFF00CCCCCC009999990099999900999999009999
      9900000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000CC660000CC6600000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000099999900999999000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000CC660000993300009933
      0000CC660000000000000000000000000000000000000000000000000000CC66
      00009933000099330000CC6600000000000000000000CCCCCC00999999009999
      9900CCCCCC00000000000000000000000000000000000000000000000000CCCC
      CC009999990099999900CCCCCC00000000000000000000000000000000000000
      000000000000000000003399CC00006699000066990000669900006699000066
      9900006699000066990000669900000000000000000000000000000000000000
      0000000000000000000099999900999999009999990099999900999999009999
      990099999900999999009999990000000000CC66000099330000000000000000
      000099330000CC66000000000000000000000000000000000000CC6600009933
      0000000000000000000099330000CC660000CCCCCC0099999900000000000000
      000099999900CCCCCC0000000000000000000000000000000000CCCCCC009999
      9900000000000000000099999900CCCCCC000000000000000000000000000000
      000000000000000000003399CC0099FFFF0099FFFF0099FFFF0099FFFF0099FF
      FF0099FFFF0099FFFF0000669900000000000000000000000000000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC009999990000000000CC66000099330000000000000000
      0000000000009933000000000000000000000000000000000000993300000000
      0000000000000000000099330000CC660000CCCCCC0099999900000000000000
      0000000000009999990000000000000000000000000000000000999999000000
      0000000000000000000099999900CCCCCC000000000000000000000000000000
      000000000000000000003399CC0099FFFF0099FFFF0099FFFF0099FFFF0099FF
      FF0099FFFF0099FFFF0000669900000000000000000000000000000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00999999000000000000000000CC660000993300000000
      00000000000099330000CC6600000000000000000000CC660000993300000000
      00000000000099330000CC6600000000000000000000CCCCCC00999999000000
      00000000000099999900CCCCCC000000000000000000CCCCCC00999999000000
      00000000000099999900CCCCCC00000000000000000000000000000000000000
      000000000000000000003399CC0099FFFF0099FFFF0099FFFF0099FFFF0099FF
      FF0099FFFF0099FFFF0000669900000000000000000000000000000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC0099999900000000000000000000000000CC6600009933
      0000993300009933000099330000CC660000CC66000099330000993300009933
      000099330000CC66000000000000000000000000000000000000CCCCCC009999
      9900999999009999990099999900CCCCCC00CCCCCC0099999900999999009999
      990099999900CCCCCC0000000000000000000000000000000000000000000000
      000000000000000000003399CC0099FFFF0099FFFF0099FFFF0099FFFF0099FF
      FF0099FFFF0099FFFF0000669900000000000000000000000000000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC0099999900000000000000000000000000000000000000
      0000993300009933000099330000993300009933000099330000993300009933
      0000000000000000000000000000000000000000000000000000000000000000
      0000999999009999990099999900999999009999990099999900999999009999
      99000000000000000000000000000000000000000000CC996600CC996600CC99
      6600CC996600CC9966003399CC0099FFFF0099FFFF0099FFFF0099FFFF0099FF
      FF0099FFFF0099FFFF0000669900000000000000000099999900999999009999
      9900999999009999990099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC0099999900000000000000000000000000000000000000
      0000000000009933000099999900FFFFFF00FFFFFF0099999900993300000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000009999990099999900FFFFFF00FFFFFF0099999900999999000000
      00000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF003399CC0099FFFF0099FFFF0099FFFF0099FFFF0099FF
      FF0099FFFF0099FFFF0000669900000000000000000099999900000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC0099999900000000000000000000000000000000000000
      00000000000099999900FFFFFF006666660066666600FFFFFF00666666000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000099999900FFFFFF009999990099999900FFFFFF00999999000000
      00000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF003399CC0099FFFF0099FFFF0099FFFF0099FFFF003399
      CC003399CC003399CC003399CC00000000000000000099999900000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC009999
      9900999999009999990099999900000000000000000000000000000000000000
      000099999900FFFFFF00CCCCCC00CCCCCC00FFFFFF0066666600CCCCCC006666
      6600000000000000000000000000000000000000000000000000000000000000
      000099999900FFFFFF00CCCCCC00CCCCCC00FFFFFF0099999900CCCCCC009999
      99000000000000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF003399CC0099FFFF0099FFFF0099FFFF0099FFFF003399
      CC00CCFFFF000066990000000000000000000000000099999900000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC009999
      9900CCCCCC009999990000000000000000000000000000000000000000009999
      9900FFFFFF00CCCCCC00CCCCCC006666660099999900FFFFFF00CCCCCC00CCCC
      CC00666666000000000000000000000000000000000000000000000000009999
      9900FFFFFF00CCCCCC00CCCCCC009999990099999900FFFFFF00CCCCCC00CCCC
      CC009999990000000000000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF003399CC0099FFFF0099FFFF0099FFFF0099FFFF003399
      CC00006699000000000000000000000000000000000099999900000000000000
      0000000000000000000099999900CCCCCC00CCCCCC00CCCCCC00CCCCCC009999
      990099999900000000000000000000000000000000000000000099999900FFFF
      FF00CCCCCC00CCCCCC0066666600000000000000000099999900FFFFFF00CCCC
      CC00CCCCCC00666666000000000000000000000000000000000099999900FFFF
      FF00CCCCCC00CCCCCC0099999900000000000000000099999900FFFFFF00CCCC
      CC00CCCCCC0099999900000000000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF003399CC003399CC003399CC003399CC003399CC003399
      CC00000000000000000000000000000000000000000099999900000000000000
      0000000000000000000099999900999999009999990099999900999999009999
      9900000000000000000000000000000000000000000099999900FFFFFF00CCCC
      CC00CCCCCC00666666000000000000000000000000000000000099999900FFFF
      FF00CCCCCC00CCCCCC0066666600000000000000000099999900FFFFFF00CCCC
      CC00CCCCCC00999999000000000000000000000000000000000099999900FFFF
      FF00CCCCCC00CCCCCC00999999000000000000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CC996600000000000000
      0000000000000000000000000000000000000000000099999900000000000000
      0000000000000000000000000000000000000000000099999900000000000000
      00000000000000000000000000000000000099999900FFFFFF00CCCCCC00CCCC
      CC00666666000000000000000000000000000000000000000000000000009999
      9900FFFFFF00CCCCCC00CCCCCC006666660099999900FFFFFF00CCCCCC00CCCC
      CC00999999000000000000000000000000000000000000000000000000009999
      9900FFFFFF00CCCCCC00CCCCCC009999990000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00CC996600CC996600CC996600CC996600000000000000
      0000000000000000000000000000000000000000000099999900000000000000
      0000000000000000000099999900999999009999990099999900000000000000
      00000000000000000000000000000000000099999900FFFFFF00CCCCCC006666
      6600000000000000000000000000000000000000000000000000000000000000
      000099999900FFFFFF00CCCCCC006666660099999900FFFFFF00CCCCCC009999
      9900000000000000000000000000000000000000000000000000000000000000
      000099999900FFFFFF00CCCCCC009999990000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00CC996600E5E5E500CC99660000000000000000000000
      0000000000000000000000000000000000000000000099999900000000000000
      0000000000000000000099999900000000009999990000000000000000000000
      00000000000000000000000000000000000099999900FFFFFF00666666000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000099999900FFFFFF006666660099999900FFFFFF00999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000099999900FFFFFF009999990000000000CC996600FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00CC996600CC9966000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900000000000000
      0000000000000000000099999900999999000000000000000000000000000000
      0000000000000000000000000000000000009999990099999900000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000099999900999999009999990099999900000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000999999009999990000000000CC996600CC996600CC99
      6600CC996600CC996600CC996600000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900999999009999
      9900999999009999990099999900000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000CC996600CC99
      6600CC996600CC996600CC996600CC996600CC996600CC996600CC996600CC99
      6600CC996600CC99660000000000000000000000000000000000999999009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900999999009999990000000000000000000000000000000000000000000000
      9900000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000FF00000000000000000000000000000000009999
      9900000000000000000000000000000000000000000000000000000000000000
      00000000000000000000CCCCCC00000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000099999900000000000000000000000000000000003333CC000000
      FF00000099000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000099999900CCCC
      CC00999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000CC996600FFFF
      FF00E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5
      E500FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC000000000099999900000000000000000000000000000000003333CC003399
      FF000000FF000000990000000000000000000000000000000000000000000000
      0000000000000000FF000000000000000000000000000000000099999900E5E5
      E500CCCCCC009999990000000000000000000000000000000000000000000000
      000000000000CCCCCC0000000000000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000009999990000000000000000000000000000000000000000003333
      CC000066FF000000CC0000000000000000000000000000000000000000000000
      00000000FF000000000000000000000000000000000000000000000000009999
      9900E5E5E5009999990000000000000000000000000000000000000000000000
      0000CCCCCC000000000000000000000000000000000000000000CC996600FFFF
      FF00E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5
      E500FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00000000009999990000000000000000000000000000000000000000000000
      00000000CC000000FF0000009900000000000000000000000000000000000000
      FF00000099000000000000000000000000000000000000000000000000000000
      000099999900CCCCCC009999990000000000000000000000000000000000CCCC
      CC00999999000000000000000000000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000009999990000000000000000000000000000000000000000000000
      0000000000000000CC000000FF000000990000000000000000000000FF000000
      9900000000000000000000000000000000000000000000000000000000000000
      00000000000099999900CCCCCC00999999000000000000000000CCCCCC009999
      9900000000000000000000000000000000000000000000000000CC996600FFFF
      FF00E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5
      E500FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00000000009999990000000000000000000000000000000000000000000000
      000000000000000000000000CC000000FF00000099000000FF00000099000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000099999900CCCCCC0099999900CCCCCC00999999000000
      0000000000000000000000000000000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000009999990000000000000000000000000000000000000000000000
      00000000000000000000000000000000CC000000FF0000009900000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000099999900CCCCCC0099999900000000000000
      0000000000000000000000000000000000000000000000000000CC996600FFFF
      FF00E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5
      E500FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00000000009999990000000000000000000000000000000000000000000000
      000000000000000000000000CC000000FF00000099000000CC00000099000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000099999900CCCCCC009999990099999900999999000000
      0000000000000000000000000000000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00CC99660000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000009999990000000000000000000000000000000000000000000000
      0000000000000000CC000000FF000000990000000000000000000000CC000000
      9900000000000000000000000000000000000000000000000000000000000000
      00000000000099999900CCCCCC00999999000000000000000000999999009999
      9900000000000000000000000000000000000000000000000000CC996600FFFF
      FF00E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500FFFFFF00CC996600CC99
      6600CC996600CC99660000000000000000000000000000000000999999000000
      0000CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC0000000000999999009999
      9900999999009999990000000000000000000000000000000000000000000000
      CC000000FF000000FF0000009900000000000000000000000000000000000000
      CC00000099000000000000000000000000000000000000000000000000009999
      9900CCCCCC00CCCCCC0099999900000000000000000000000000000000009999
      9900999999000000000000000000000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CC996600E5E5
      E500CC9966000000000000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000999999000000
      00009999990000000000000000000000000000000000000000000000CC003399
      FF000000FF000000990000000000000000000000000000000000000000000000
      00000000CC00000099000000000000000000000000000000000099999900E5E5
      E500CCCCCC009999990000000000000000000000000000000000000000000000
      0000999999009999990000000000000000000000000000000000CC996600FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CC996600CC99
      6600000000000000000000000000000000000000000000000000999999000000
      0000000000000000000000000000000000000000000000000000999999009999
      9900000000000000000000000000000000000000000000000000666699000000
      CC00666699000000000000000000000000000000000000000000000000000000
      000000000000000000000000CC00000000000000000000000000CCCCCC009999
      9900CCCCCC000000000000000000000000000000000000000000000000000000
      0000000000000000000099999900000000000000000000000000CC996600CC99
      6600CC996600CC996600CC996600CC996600CC996600CC996600CC9966000000
      0000000000000000000000000000000000000000000000000000999999009999
      9900999999009999990099999900999999009999990099999900999999000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000CC00000066000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000B2B2B2008080800000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000000000000000000000CC
      0000009900000099000000660000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000B2B2
      B200999999009999990080808000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000FF00000099000000
      99000000990000000000000000000000000000000000000000000000FF000000
      99000000990000009900000000000000000000000000B2B2B200808080008080
      8000808080000000000000000000000000000000000000000000B2B2B2008080
      800080808000808080000000000000000000000000000000000000CC00000099
      0000009900000099000000990000006600000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000B2B2B2009999
      9900999999009999990099999900808080000000000000000000000000000000
      000000000000000000000000000000000000000000000000FF000000CC000000
      CC000000CC00000099000000000000000000000000000000FF000000CC000000
      CC000000CC0000009900000000000000000000000000B2B2B200999999009999
      99009999990080808000000000000000000000000000B2B2B200999999009999
      9900999999008080800000000000000000000000000000CC0000009900000099
      0000009900000099000000990000009900000066000000000000000000000000
      00000000000000000000000000000000000000000000B2B2B200999999009999
      9900999999009999990099999900999999008080800000000000000000000000
      00000000000000000000000000000000000000000000000000000000FF000000
      CC000000CC000000CC0000009900000000000000FF000000CC000000CC000000
      CC00000099000000000000000000000000000000000000000000B2B2B2009999
      990099999900999999008080800000000000B2B2B20099999900999999009999
      9900808080000000000000000000000000000000000000CC0000009900000099
      00000066000000CC000000990000009900000099000000660000000000000000
      00000000000000000000000000000000000000000000B2B2B200999999009999
      990080808000B2B2B20099999900999999009999990080808000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      FF000000CC000000CC000000CC00000099000000CC000000CC000000CC000000
      990000000000000000000000000000000000000000000000000000000000B2B2
      B200999999009999990099999900808080009999990099999900999999008080
      8000000000000000000000000000000000000000000000CC0000009900000066
      0000000000000000000000CC0000009900000099000000990000006600000000
      00000000000000000000000000000000000000000000B2B2B200999999008080
      80000000000000000000B2B2B200999999009999990099999900808080000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000FF000000CC000000CC000000CC000000CC000000CC00000099000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000B2B2B2009999990099999900999999009999990099999900808080000000
      0000000000000000000000000000000000000000000000CC0000006600000000
      000000000000000000000000000000CC00000099000000990000009900000066
      00000000000000000000000000000000000000000000B2B2B200808080000000
      0000000000000000000000000000B2B2B2009999990099999900999999008080
      8000000000000000000000000000000000000000000000000000000000000000
      0000000000000000FF000000CC000000CC000000CC0000009900000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000B2B2B20099999900999999009999990080808000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000CC000000990000009900000099
      0000006600000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000B2B2B20099999900999999009999
      9900808080000000000000000000000000000000000000000000000000000000
      00000000FF000000CC000000CC000000CC000000CC000000CC00000099000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000B2B2B2009999990099999900999999009999990099999900808080000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000CC0000009900000099
      0000009900000066000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000B2B2B200999999009999
      9900999999008080800000000000000000000000000000000000000000000000
      FF000000CC000000CC000000CC00000099000000CC000000CC000000CC000000
      990000000000000000000000000000000000000000000000000000000000B2B2
      B200999999009999990099999900808080009999990099999900999999008080
      8000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000CC00000099
      0000009900000066000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000B2B2B2009999
      99009999990080808000000000000000000000000000000000000000FF000000
      CC000000CC000000CC0000009900000000000000FF000000CC000000CC000000
      CC00000099000000000000000000000000000000000000000000B2B2B2009999
      990099999900999999008080800000000000B2B2B20099999900999999009999
      9900808080000000000000000000000000000000000000000000000000000000
      00000000000000000000000000000000000000000000000000000000000000CC
      0000009900000066000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000B2B2
      B20099999900808080000000000000000000000000000000FF000000CC000000
      CC000000CC00000099000000000000000000000000000000FF000000CC000000
      CC000000CC0000009900000000000000000000000000B2B2B200999999009999
      99009999990080808000000000000000000000000000B2B2B200999999009999
      9900999999008080800000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000CC00000066000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000B2B2B200808080000000000000000000000000000000FF000000FF000000
      FF000000FF0000000000000000000000000000000000000000000000FF000000
      FF000000FF000000FF00000000000000000000000000B2B2B200B2B2B200B2B2
      B200B2B2B2000000000000000000000000000000000000000000B2B2B200B2B2
      B200B2B2B200B2B2B20000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000993300009933
      0000993300009933000099330000993300009933000099330000993300009933
      0000993300009933000099330000000000000000000000000000999999009999
      9900999999009999990099999900999999009999990099999900999999009999
      990099999900999999009999990000000000000000003399CC00006699000066
      9900006699000066990000669900006699000066990000669900006699000066
      990066CCCC000000000000000000000000000000000099999900999999009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900CCCCCC000000000000000000000000000000000099330000CC660000CC66
      000099330000E5E5E500CC66000099330000E5E5E500E5E5E500E5E5E5009933
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC0099999900E5E5E500CCCCCC0099999900E5E5E500E5E5E500E5E5E5009999
      9900CCCCCC00CCCCCC0099999900000000003399CC003399CC0099FFFF0066CC
      FF0066CCFF0066CCFF0066CCFF0066CCFF0066CCFF0066CCFF0066CCFF003399
      CC00006699000000000000000000000000009999990099999900E5E5E500CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC009999
      9900999999000000000000000000000000000000000099330000CC660000CC66
      000099330000E5E5E500CC66000099330000E5E5E500E5E5E500E5E5E5009933
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC0099999900E5E5E500CCCCCC0099999900E5E5E500E5E5E500E5E5E5009999
      9900CCCCCC00CCCCCC0099999900000000003399CC003399CC0066CCFF0099FF
      FF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0066CC
      FF00006699003399CC0000000000000000009999990099999900CCCCCC00E5E5
      E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500CCCC
      CC00999999009999990000000000000000000000000099330000CC660000CC66
      000099330000E5E5E500CC66000099330000E5E5E500E5E5E500E5E5E5009933
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC0099999900E5E5E500CCCCCC0099999900E5E5E500E5E5E500E5E5E5009999
      9900CCCCCC00CCCCCC0099999900000000003399CC003399CC0066CCFF0099FF
      FF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0066CC
      FF0066CCCC000066990000000000000000009999990099999900CCCCCC00E5E5
      E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500CCCC
      CC00CCCCCC009999990000000000000000000000000099330000CC660000CC66
      000099330000E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E5009933
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC0099999900E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E5009999
      9900CCCCCC00CCCCCC0099999900000000003399CC0066CCFF003399CC0099FF
      FF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0066CC
      FF0099FFFF00006699003399CC000000000099999900CCCCCC0099999900E5E5
      E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500CCCC
      CC00E5E5E5009999990099999900000000000000000099330000CC660000CC66
      0000CC660000993300009933000099330000993300009933000099330000CC66
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00999999009999990099999900999999009999990099999900CCCC
      CC00CCCCCC00CCCCCC0099999900000000003399CC0066CCFF0066CCCC0066CC
      CC0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0099FFFF0066CC
      FF0099FFFF0066CCCC00006699000000000099999900CCCCCC00CCCCCC00CCCC
      CC00E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500CCCC
      CC00E5E5E500CCCCCC0099999900000000000000000099330000CC660000CC66
      0000CC660000CC660000CC660000CC660000CC660000CC660000CC660000CC66
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCCCC00CCCC
      CC00CCCCCC00CCCCCC0099999900000000003399CC0099FFFF0066CCFF003399
      CC00CCFFFF00CCFFFF00CCFFFF00CCFFFF00CCFFFF00CCFFFF00CCFFFF0099FF
      FF00CCFFFF00CCFFFF00006699000000000099999900E5E5E500CCCCCC009999
      9900E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5
      E500E5E5E500E5E5E50099999900000000000000000099330000CC660000CC66
      0000993300009933000099330000993300009933000099330000993300009933
      0000CC660000CC66000099330000000000000000000099999900CCCCCC00CCCC
      CC00999999009999990099999900999999009999990099999900999999009999
      9900CCCCCC00CCCCCC0099999900000000003399CC0099FFFF0099FFFF0066CC
      FF003399CC003399CC003399CC003399CC003399CC003399CC003399CC003399
      CC003399CC003399CC0066CCFF000000000099999900E5E5E500E5E5E500CCCC
      CC00999999009999990099999900999999009999990099999900999999009999
      99009999990099999900CCCCCC00000000000000000099330000CC6600009933
      0000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0099330000CC66000099330000000000000000000099999900CCCCCC009999
      9900FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0099999900CCCCCC0099999900000000003399CC00CCFFFF0099FFFF0099FF
      FF0099FFFF0099FFFF00CCFFFF00CCFFFF00CCFFFF00CCFFFF00CCFFFF000066
      99000000000000000000000000000000000099999900E5E5E500E5E5E500E5E5
      E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E500E5E5E5009999
      9900000000000000000000000000000000000000000099330000CC6600009933
      0000FFFFFF00993300009933000099330000993300009933000099330000FFFF
      FF0099330000CC66000099330000000000000000000099999900CCCCCC009999
      9900FFFFFF00999999009999990099999900999999009999990099999900FFFF
      FF0099999900CCCCCC009999990000000000000000003399CC00CCFFFF00CCFF
      FF00CCFFFF00CCFFFF003399CC003399CC003399CC003399CC003399CC000000
      0000000000000000000000000000000000000000000099999900E5E5E500E5E5
      E500E5E5E500E5E5E50099999900999999009999990099999900999999000000
      0000000000000000000000000000000000000000000099330000CC6600009933
      0000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0099330000CC66000099330000000000000000000099999900CCCCCC009999
      9900FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0099999900CCCCCC00999999000000000000000000000000003399CC003399
      CC003399CC003399CC0000000000000000000000000000000000000000000000
      0000000000009933000099330000993300000000000000000000999999009999
      9900999999009999990000000000000000000000000000000000000000000000
      0000000000009999990099999900999999000000000099330000E5E5E5009933
      0000FFFFFF00993300009933000099330000993300009933000099330000FFFF
      FF00993300009933000099330000000000000000000099999900E5E5E5009999
      9900FFFFFF00999999009999990099999900999999009999990099999900FFFF
      FF00999999009999990099999900000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000099330000993300000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000099999900999999000000000099330000CC6600009933
      0000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0099330000CC66000099330000000000000000000099999900CCCCCC009999
      9900FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0099999900CCCCCC0099999900000000000000000000000000000000000000
      0000000000000000000000000000000000000000000099330000000000000000
      0000000000009933000000000000993300000000000000000000000000000000
      0000000000000000000000000000000000000000000099999900000000000000
      0000000000009999990000000000999999000000000099330000993300009933
      0000993300009933000099330000993300009933000099330000993300009933
      0000993300009933000099330000000000000000000099999900999999009999
      9900999999009999990099999900999999009999990099999900999999009999
      9900999999009999990099999900000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000993300009933
      0000993300000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000999999009999
      9900999999000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000424D3E000000000000003E000000
      2800000040000000900000000100010000000000800400000000000000000000
      000000000000000000000000FFFFFF00FFFFFFFF00000000FFFFFFFF00000000
      FFFFFFFF0000000087C387C3000000008383838300000000C107C10700000000
      E00FE00F00000000F01FF01F00000000F83FF83F00000000F01FF01F00000000
      E00FE00F00000000C107C10700000000838383830000000087C387C300000000
      FFFFFFFF00000000FFFFFFFF00000000FF24FF24E000E000FF24FF24E000EFFE
      FE7FFE7FE000EFFEFC3FFC3FE000EC06FC1FFC1F60006FFEFC0FFC0F20002802
      F807F80700000802F803F80320002802F003F00360006FFEE007E007E000EC06
      C03FC03FE000EFFE80FF80FFE000EC0600FF00FFE000EFFE01FF01FFE000EC06
      87FF87FFE000EFFECFFFCFFFE000E000FFFFFFFFFF80FF80FFFFFFFFFF80FF80
      FE7FFE7FFE41FE41FC3FFC3FFC23FC23FC1FFC1FFC17FC17FC0FFC0FFC0FFC0F
      F807F807F807F807F803F803F803F803F003F003F003F003E007E007E007E007
      C03FC03FC03FC03F80FF80FF80FF80FF00FF00FF00FF00FF01FF01FF01FF01FF
      87FF87FF87FF87FFCFFFCFFFCFFFCFFFFFFFFFFFFFFFFFFFFFFFFFFF80008000
      FFFFFFFF80008000FFFFFFFF80008000FFFFFFFF80008000E7FFE7FF80008000
      CF83CF8380008000DFC3DFC380008000DFE3DFE380008000DFD3DFD380008000
      CF3BCF3B80008000E0FFE0FF80008000FFFFFFFF80008000FFFFFFFF80008000
      FFFFFFFF80008000FFFFFFFF80008000FE00FE00FFFFFFFFFE00FEFEFFFFFFFF
      C000C0FEFFFFFFFF800080FEFFFFFFFF800080FEFFFFFFFF800080FEFFE7FFE7
      800080FEC1F3C1F3800080F0C3FBC3FB800180F5C7FBC7FB800380F3CBFBCBFB
      80078007DCF3DCF380078007FF07FF0780078007FFFFFFFF80078007FFFFFFFF
      C00FC00FFFFFFFFFFCFFFCFFFFFFFFFF87E187E1FC01FC0133CC33CCFC01FC01
      3BDC3BDCFC01FC0199999999FC01FC01C003C003FC01FC01F00FF00F80018001
      F81FF81F8001BC01F81FF81F8001BC01F00FF00F8003BC03E007E0078007BC07
      C183C183800FBC0F83C183C1803FBFBF07E007E0803FBC3F0FF00FF0807FBD7F
      1FF81FF880FFBCFF3FFC3FFC81FF81FFFFFFFFFFFFFFFFFFC003C003EFFDEFFD
      C003DFFBC7FFC7FFC003D00BC3FBC3FBC003DFFBE3F7E3F7C003D00BF1E7F1E7
      C003DFFBF8CFF8CFC003D00BFC1FFC1FC003DFFBFE3FFE3FC003D00BFC1FFC1F
      C003DFFBF8CFF8CFC003D043E1E7E1E7C007DFD7C3F3C3F3C00FDFCFC7FDC7FD
      C01FC01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      F3FFF3FFFFFFFFFFE1FFE1FF87C387C3C0FFC0FF83838383807F807FC107C107
      803F803FE00FE00F8C1F8C1FF01FF01F9E0F9E0FF83FF83FFF07FF07F01FF01F
      FF83FF83E00FE00FFFC3FFC3C107C107FFE3FFE383838383FFF3FFF387C387C3
      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC001C001
      8007800780018001000700078001800100030003800180010003000380018001
      0001000180018001000100018001800100010001800180010001000180018001
      000F000F80018001801F801F80018001C3F8C3F880018001FFFCFFFC80018001
      FFBAFFBA80018001FFC7FFC7FFFFFFFF00000000000000000000000000000000
      000000000000}
  end
  object EditDoc1: TLMDEditDocument
    Lines.Strings = (
      '')
    WordSeparators = '[]();,'#39'"-+/\:{}.'
    SyntaxSchemes = <
      item
        Name = 'Lua'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '    <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>                '
          '    '
          '        <Regex token0='#39'email'#39'>'
          '            [_a-zA-Z\d\-\.]{1,40}'
          '            @ '
          '            ([_ a-z A-Z \d \-]+ '
          '            (\. [_ a-z A-Z \d \-]+ )+ )'
          '        </Regex>'
          '    </Scheme>'
          ''
          '    <Scheme name='#39'Numbers'#39'>'
          '        <Regex token0='#39'number'#39'>'
          '            \b (0x \d+ [lL]? | \d+ (e \d*)? [lLdDfF]? ) \b'
          '        </Regex>'
          '        '
          '        <Regex token0='#39'number'#39'>'
          '            \b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? \d+) \b'
          '        </Regex>'
          '    </Scheme>'
          ''
          
            '    <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'comment'#39 +
            '  />'
          ''
          '    <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'string'#39'>'
          '    </Scheme>'
          ''
          
            '    <Scheme name='#39'StringInterpolation'#39' inherit='#39'String'#39' defaultT' +
            'oken='#39'string'#39'>'
          
            '        <Regex token0='#39'escaped'#39' regex='#39'\\[a-z 0 &quot; &apos; ]'#39 +
            ' />'
          '        <Regex token0='#39'escaped'#39' regex='#39'\\ \d{1,3}'#39' />'
          '    </Scheme>'
          ''
          '    <Scheme name='#39'Main'#39' inherit='#39'Numbers'#39' '
          '            defaultToken='#39'default'#39'           '
          ''
          '            keywordsIgnoreCase='#39'true'#39
          '    >'
          '        <KeywordRegex>\b[a-zA-Z_]\w*\b</KeywordRegex>'
          ''
          '        <Keywords>    '
          '             and       break     do        else      elseif'
          '             end       false     for       function  if'
          '             in        local     nil       not       or'
          
            '             repeat    return    then      true      until     w' +
            'hile'
          '             string.upper'
          '        </Keywords>'
          ''
          
            '        <RegexBlock innerScheme='#39'StringInterpolation'#39' start_toke' +
            'n0='#39'string'#39' '
          '                    end_token0='#39'string'#39' >'
          ''
          '            <Start> &quot; | &apos;  </Start>        '
          '            <End> $0 </End>        '
          '        </RegexBlock>'
          ''
          
            '        <RegexBlock innerScheme='#39'String'#39' start_token0='#39'string'#39' p' +
            'riority='#39'100'#39
          '                    end_token0='#39'string'#39' >'
          ''
          '            <Start> \[ (\=*) \[  </Start>        '
          '            <End> \] $1 \] </End>        '
          '        </RegexBlock>'
          ''
          ''
          
            '        <RegexBlock innerScheme='#39'Comment'#39' start_token0='#39'comment'#39 +
            ' priority='#39'100'#39
          '                    end_token0='#39'comment'#39' >'
          ''
          '            <Start> --\[ (\=*) \[  </Start>        '
          '            <End> \] $1 \] </End>        '
          '        </RegexBlock>'
          ''
          
            '        <Regex innerScheme='#39'Comment'#39' priority='#39'1000'#39' regex='#39'--([' +
            '^ \[ ].*)?$'#39' />'
          '        '
          
            '        <RegexBlock start='#39'\/\*'#39' end='#39'\*\/'#39' end_token0='#39'comment'#39 +
            ' '
          '                innerScheme='#39'Comment'#39'/>'
          ''
          
            '        <Regex token0='#39'symbol'#39' regex='#39'[   \}   \{    \]  \#  \[ ' +
            ' \( \) &gt; &lt; ]'#39' />'
          '        <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          ''
          '        <SkipSyntaxToken token='#39'comment'#39' />'
          ''
          ''
          '        <SyntaxBlock capture="true">'
          '            <Start> ( kw:local )? kw:function  </Start>'
          '            <End> kw:end  </End>'
          '        </SyntaxBlock>'
          ''
          '       '
          '        <SyntaxBlock capture="true">'
          '            <Start> kw:if </Start>'
          '            <End> kw:end  </End>'
          '        </SyntaxBlock>'
          ''
          '        <SyntaxBlock capture="true">'
          '            <Start> kw:repeat </Start>'
          '            <End> kw:until  </End>'
          '        </SyntaxBlock>'
          ''
          '        <SyntaxBlock capture="true">'
          '            <Start> [ kw:while kw:for ] .+? kw:do  </Start>'
          '            <End> kw:end  </End>'
          '        </SyntaxBlock>'
          ''
          '        <SyntaxBlock capture="true">'
          '            <Start> kw:do  </Start>'
          '            <End> kw:end  </End>'
          '        </SyntaxBlock>'
          '    </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'Text'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '  <TokenAlias name='#39'text'#39' baseToken='#39'default'#39' />'
          '  '
          '  <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>'
          '        <Regex token0='#39'email'#39'>'
          '            [_a-zA-Z\d\-\.]{1,40}'
          '            @ '
          '            ([_ a-z A-Z \d \-]+ '
          '            (\. [_ a-z A-Z \d \-]+ )+ )'
          '        </Regex>                '
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Numbers'#39'>'
          
            '    <Regex token0='#39'number'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [lLdD' +
            'fF]? ) \b</Regex>'
          
            '    <Regex token0='#39'number'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? ' +
            '\d+) \b</Regex>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Main'#39' keywordsIgnoreCase='#39'false'#39' '
          '          inherit='#39'Text'#39
          '          defaultToken='#39'text'#39'>'
          '  </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'XML'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ' '
          '<SchemeList root='#39'Main'#39'>'
          ''
          '  <Scheme name='#39'BaseSyntax'#39'>'
          '    <Regex token0='#39'entity'#39'>'
          '        &amp;[a-zA-Z]+;'
          '    </Regex>'
          ''
          '    <RegexBlock innerScheme='#39'Comment'#39' end_token0='#39'comment'#39' >'
          '        <Start> &lt; !--  </Start>        '
          '        <End> --&gt; </End>        '
          '    </RegexBlock>'
          ''
          '  </Scheme>'
          ''
          '  <Scheme name='#39'InsideTag'#39' inherit='#39'BaseSyntax'#39'>'
          
            '    <RegexBlock innerScheme='#39'CDATA'#39' start_token0='#39'cdataTagStart'#39 +
            ' end_token0='#39'cdataTagEnd'#39' >'
          '        <Start> &lt; !\[CDATA  </Start>'
          '        <End> \]\] &gt; </End>        '
          '    </RegexBlock>'
          '  </Scheme>'
          '  '
          '  <Scheme name='#39'WithTags'#39' inherit='#39'Tag'#39' inherit0='#39'BaseSyntax'#39'>'
          '  '
          
            '    <RegexBlock innerScheme='#39'WithTags'#39' start_token0='#39'tagOpen'#39' en' +
            'd_token0='#39'tagClose'#39' >'
          '        <Start> &lt; ([\w:]+) </Start>        '
          '        <End> ( / &gt; ) | ( &lt; / $1 &gt; ) </End>        '
          '    </RegexBlock>  '
          ''
          
            '    <RegexBlock innerScheme='#39'InsideTag'#39' start_token0='#39'tagOpen'#39' e' +
            'nd_token0='#39'tagClose'#39' >'
          '        <Start> &gt;  </Start>        '
          '        <End> (?= &lt; [^ ! ] ) </End>        '
          '    </RegexBlock>  '
          ''
          ''
          '    <SyntaxBlock capture='#39'true'#39'>'
          '        <Start> tagOpen </Start>'
          '        <End> tagClose </End>'
          '    </SyntaxBlock>'
          '    '
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Comment'#39' defaultToken='#39'comment'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'XmlDecl'#39' inherit='#39'Tag'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'CDATA'#39' defaultToken='#39'xmlCdata'#39'>'
          '    <SyntaxBlock capture='#39'true'#39'>'
          '        <Start> cdataTagStart </Start>'
          '        <End> cdataTagEnd </End>'
          '    </SyntaxBlock>  '
          '  </Scheme>    '
          '    '
          '  <Scheme name='#39'DTD'#39' defaultToken='#39'comment'#39'>               '
          '  </Scheme>'
          '    '
          '  <Scheme name='#39'AttrStringQuot'#39'>'
          '    <Regex token0='#39'attributeValue'#39'> [^ &quot; ]+</Regex>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'AttrStringApos'#39'>'
          '    <Regex token0='#39'attributeValue'#39'> [^ &apos; ]+</Regex>'
          '  </Scheme>'
          '    '
          '  <Scheme name='#39'Tag'#39'>  '
          '  '
          '    <Regex token0='#39'attributeName'#39' priority='#39'10'#39'>'
          '        \b\w+ \s* = \s*        '
          ''
          '    </Regex>'
          ''
          '    <Regex token0='#39'attributeValue'#39'>'
          '        [^ &lt; &gt; &quot; &apos; = \s ]+         '
          '    </Regex>'
          ''
          
            '    <RegexBlock innerScheme='#39'AttrStringQuot'#39' start_token0='#39'attri' +
            'buteValue'#39' '
          '        end_token0='#39'attributeValue'#39' >'
          ''
          '        <Start> &quot;  </Start>        '
          '        <End> &quot; </End>        '
          '    </RegexBlock>'
          ''
          
            '    <RegexBlock innerScheme='#39'AttrStringApos'#39' start_token0='#39'attri' +
            'buteValue'#39' '
          '        end_token0='#39'attributeValue'#39' >'
          ''
          '        <Start> &apos;  </Start>        '
          '        <End> &apos; </End>        '
          '    </RegexBlock>'
          ''
          '  </Scheme>'
          '  '
          ''
          ''
          '  <Scheme name='#39'Main'#39' defaultToken='#39'default'#39
          '          inherit='#39'BaseSyntax'#39'        '
          '          inherit0='#39'WithTags'#39'      '
          '          keywordsIgnoreCase='#39'true'#39' >'
          '                    '
          ''
          
            '    <RegexBlock innerScheme='#39'DTD'#39' start_token0='#39'dtdTagStartEnd'#39' ' +
            'end_token0='#39'dtdTagStartEnd'#39' >'
          '        <Start> &lt; !\w+  </Start>        '
          '        <End> &gt; </End>        '
          '    </RegexBlock>'
          '                    '
          '    <Regex token0='#39'tagClose'#39'>'
          '        &lt; / [\w:]+ \s* &gt;'
          '    </Regex>'
          ''
          
            '    <RegexBlock innerScheme='#39'XmlDecl'#39' start_token0='#39'xmlDeclStart' +
            #39' end_token0='#39'xmlDeclEnd'#39' >'
          '        <Start> &lt; \? xml  </Start>'
          '        <End> \? &gt; </End>        '
          '    </RegexBlock>'
          ''
          ''
          '  </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'C'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '  <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>'
          '        <Regex token0='#39'email'#39'>'
          '            [_a-zA-Z\d\-\.]{1,40}'
          '            @ '
          '            ([_ a-z A-Z \d \-]+ '
          '            (\. [_ a-z A-Z \d \-]+ )+ )'
          '        </Regex>                '
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Numbers'#39'>'
          
            '    <Regex token0='#39'number'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [lLdD' +
            'fF]? ) \b</Regex>'
          
            '    <Regex token0='#39'number'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? ' +
            '\d+) \b</Regex>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'comment'#39'>'
          
            '    <Regex token0='#39'st'#39' regex='#39' \/\* | \*\/   '#39' />               ' +
            ' '
          '            '
          '     <SyntaxBlock capture="true">'
          '        <Start> st:/*  </Start>'
          '        <End> st:*/  </End>'
          '     </SyntaxBlock>                '
          '  </Scheme>'
          ''
          '  <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'string'#39'>'
          '    <Regex token0='#39'escaped'#39' priority='#39'10'#39' regex='#39'\\\\'#39' />'
          '    <Regex token0='#39'escaped'#39' regex='#39'\\[a-z &quot; ]'#39' />    '
          '    <Regex token0='#39'escaped'#39' regex='#39'\\0x[a-fA-F0-9]+'#39' />'
          '  </Scheme>'
          ''
          
            '  <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'badStr' +
            'ing'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'StringFind'#39'>'
          '    <Regex token0='#39'badString'#39'> '
          '        &apos; ( [^\\] | \\[a-z &apos;] | \\0x[a-fA-F0-9]+ )?'
          '    </Regex>'
          ''
          '    <Regex token0='#39'string'#39' priority='#39'10'#39'> '
          
            '        &apos; ( [^\\] | \\[a-z &apos;] | \\0x[a-fA-F0-9]+ ) &ap' +
            'os;'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'BadString'#39' > '
          '        &quot; (.*?\\ &quot; )*? .* $ '
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '        &quot; (.*?\\ &quot; )*? &quot;'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '        &quot; (.*?\\ &quot; )*? .*? [^\\] &quot;'
          '    </Regex>  '
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '        &quot; &quot;'
          '    </Regex>'
          ''
          '  </Scheme>'
          '  '
          
            '  <Scheme name='#39'Preprocessor'#39' defaultToken='#39'preprocessor'#39' inheri' +
            't='#39'BaseSyntax'#39' >'
          ''
          '    <IdentRe>\b[a-zA-Z]+\b</IdentRe>'
          ''
          '    <Keywords>'
          '      if ifdef endif else using include define undef pragma'
          '    </Keywords>'
          ''
          '  </Scheme>'
          ''
          '  <Scheme name='#39'BadPreprocessor'#39' defaultToken='#39'badPreprocessor'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'BaseSyntax'#39' inherit='#39'Numbers'#39'>'
          '    <Regex innerScheme='#39'Comment'#39' regex='#39'//.*$'#39' />'
          ''
          ''
          '    <RegexBlock start='#39'\/\*'#39' end='#39'\*\/'#39' end_token0='#39'comment'#39' '
          '                innerScheme='#39'Comment'#39'/>'
          ''
          
            '    <Regex token0='#39'symbol'#39' regex='#39'[   \}   \{    \]    \[  \( \)' +
            ' &gt; &lt; ]'#39' />'
          '    <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          ''
          ''
          '  </Scheme>'
          ''
          
            '  <Scheme name='#39'Main'#39' inherit='#39'BaseSyntax'#39' inherit0='#39'StringFind'#39 +
            ' '
          '          defaultToken='#39'default'#39'           '
          ''
          '          keywordsIgnoreCase='#39'false'#39
          '  >'
          '    <KeywordRegex>\b[a-zA-Z_][\w_]*\b</KeywordRegex>'
          ''
          '    <Keywords>'
          '      asm auto bool break case char const continue'
          '      default do double else enum export'
          '      extern false float for goto if inline int long '
          '      register return short signed sizeof static '
          
            '      switch typedef union unsigned void volatile wchar_t while ' +
            'NULL'
          '      __try __finally __catch'
          '    </Keywords>'
          ''
          ''
          
            '    <Regex innerScheme='#39'Preprocessor'#39' innerContentGroup='#39'1'#39' prio' +
            'rity='#39'10'#39' >'
          '        ^ \s* \# ([a-zA-Z]+) .* $'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'BadPreprocessor'#39' innerContentGroup='#39'1'#39'>'
          '        ^ .*? \S .*? \# ([a-zA-Z]+) .* $'
          '    </Regex>'
          ''
          '    <RegexBlock innerScheme='#39'Preprocessor'#39' '
          '                innerContentGroup='#39'1'#39
          '                priority='#39'100'#39'>'
          '        <Start> ^ \s* \#([a-zA-Z]+) .* \\ \s* $  </Start>'
          '        <End>   (^ .* [^ \\ \s ] \s* $) | (^ \s* $)  </End>'
          '    </RegexBlock>'
          ''
          '    '
          '    <SkipSyntaxToken token='#39'comment'#39' />'
          ''
          '    <SyntaxBlock capture="true">'
          '        <Start> '
          '            [ preprocessor:if  preprocessor:ifdef  ]'
          '        </Start>'
          ''
          '        <End> [ preprocessor:ifend  preprocessor:endif ] </End>'
          '    </SyntaxBlock>'
          ''
          ''
          '        '
          '    <SyntaxBlock capture="true">'
          '        <Start> id  sym:(  [^ sym:;    sym:}   sym:{   ]*  '
          
            '                sym:) ( sym::   [^ sym:;    sym:}   sym:{   ]+  ' +
            ' )? sym:{'
          '        </Start>'
          ''
          '        <End> sym:\}  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="true" priority='#39'10'#39'>'
          '        <Start>                 '
          
            '            [ kw:while  kw:do kw:if  kw:else  kw:__try  kw:__fin' +
            'ally   kw:switch ]'
          '                                '
          '            [^ sym:;  sym:}  ]*?    sym:\{'
          '        </Start>'
          ''
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          '        '
          ''
          
            '    <SyntaxBlock capture="true" priority='#39'100'#39'  startGroupUsed='#39 +
            '1'#39'>'
          '        <Start>'
          
            '                    (  [ kw:while  kw:if  ]  sym:(   [^  sym:;  ' +
            ' sym:}    sym:{   ]+ sym:)   )    '
          ''
          '                    [^ sym:{  sym:}  sym:; ]+ sym:;'
          ''
          '             '
          '        </Start>'
          ''
          '        <End> sym:;  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="false" priority='#39'0'#39'  >'
          '        <Start> sym:{  </Start>'
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          ''
          '  </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'CPP'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '  <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>'
          '        <Regex token0='#39'email'#39'>'
          '            [_a-zA-Z\d\-\.]{1,40}'
          '            @ '
          '            ([_ a-z A-Z \d \-]+ '
          '            (\. [_ a-z A-Z \d \-]+ )+ )'
          '        </Regex>                '
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Numbers'#39'>'
          
            '    <Regex token0='#39'number'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [lLdD' +
            'fF]? ) \b</Regex>'
          
            '    <Regex token0='#39'number'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? ' +
            '\d+) \b</Regex>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'comment'#39'>'
          
            '    <Regex token0='#39'st'#39' regex='#39' \/\* | \*\/   '#39' />               ' +
            ' '
          '            '
          '     <SyntaxBlock capture="true">'
          '        <Start> st:/*  </Start>'
          '        <End> st:*/  </End>'
          '     </SyntaxBlock>                '
          '  </Scheme>'
          ''
          '  <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'string'#39'>'
          '    <Regex token0='#39'escaped'#39' priority='#39'10'#39' regex='#39'\\\\'#39' />  '
          '    <Regex token0='#39'escaped'#39' regex='#39'\\[a-z &quot; ]'#39' />    '
          '    <Regex token0='#39'escaped'#39' regex='#39'\\0x[a-fA-F0-9]+'#39' />'
          '  </Scheme>'
          ''
          
            '  <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'badStr' +
            'ing'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'StringFind'#39'>'
          '    <Regex token0='#39'badString'#39'> '
          '        &apos; ( [^\\] | \\[a-z &apos;] | \\0x[a-fA-F0-9]+ )?'
          '    </Regex>'
          ''
          '    <Regex token0='#39'string'#39' priority='#39'10'#39'> '
          
            '        &apos; ( [^\\] | \\[a-z &apos;] | \\0x[a-fA-F0-9]+ ) &ap' +
            'os;'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'BadString'#39' > '
          '        &quot; (.*?\\ &quot; )*? .* $ '
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '        &quot; (.*?\\ &quot; )*? &quot;'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '        &quot; (.*?\\ &quot; )*? .*? [^\\] &quot;'
          '    </Regex>  '
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '        &quot; &quot;'
          '    </Regex>'
          '    '
          '  </Scheme>'
          '  '
          
            '  <Scheme name='#39'Preprocessor'#39' defaultToken='#39'preprocessor'#39' inheri' +
            't='#39'BaseSyntax'#39' >'
          ''
          '    <IdentRe>\b[a-zA-Z]+\b</IdentRe>'
          ''
          '    <Keywords>'
          '      if ifdef endif else using include define undef pragma'
          '    </Keywords>'
          ''
          '  </Scheme>'
          ''
          '  <Scheme name='#39'BadPreprocessor'#39' defaultToken='#39'badPreprocessor'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'BaseSyntax'#39' inherit='#39'Numbers'#39'>'
          '    <Regex innerScheme='#39'Comment'#39' regex='#39'//.*$'#39' />'
          ''
          ''
          '    <RegexBlock start='#39'\/\*'#39' end='#39'\*\/'#39' end_token0='#39'comment'#39' '
          '                innerScheme='#39'Comment'#39'/>'
          ''
          
            '    <Regex token0='#39'symbol'#39' regex='#39'[   \}   \{    \]    \[  \( \)' +
            ' &gt; &lt; ]'#39' />'
          '    <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          ''
          ''
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Main'#39' inherit='#39'BaseSyntax'#39' '
          '          inherit1='#39'StringFind'#39' '
          '          defaultToken='#39'default'#39'           '
          ''
          '          keywordsIgnoreCase='#39'false'#39
          '  >'
          '    <KeywordRegex>\b[a-zA-Z_][\w_]*\b</KeywordRegex>'
          ''
          '    <Keywords>'
          
            '      asm auto bool break case catch char class const const_cast' +
            ' continue'
          
            '      default delete do double dynamic_cast else enum explicit e' +
            'xport'
          
            '      extern false float for friend goto if inline int long muta' +
            'ble'
          '      namespace new operator private protected public register'
          
            '      reinterpret_cast return short signed sizeof static static_' +
            'cast struct'
          
            '      switch template this throw true try typedef typeid typenam' +
            'e union'
          
            '      unsigned using virtual void volatile wchar_t while nullptr' +
            '  NULL'
          '      __try __finally'
          '    </Keywords>'
          ''
          ''
          
            '    <Regex innerScheme='#39'Preprocessor'#39' innerContentGroup='#39'1'#39' prio' +
            'rity='#39'10'#39' >'
          '        ^ \s* \# ([a-zA-Z]+) .* $'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'BadPreprocessor'#39' innerContentGroup='#39'1'#39'>'
          '        ^ .*? \S .*? \# ([a-zA-Z]+) .* $'
          '    </Regex>'
          ''
          '    <RegexBlock innerScheme='#39'Preprocessor'#39' '
          '                innerContentGroup='#39'1'#39
          '                priority='#39'100'#39'>'
          '        <Start> ^ \s* \#([a-zA-Z]+) .* \\ \s* $  </Start>'
          '        <End>   (^ .* [^ \\ \s ] \s* $) | (^ \s* $)  </End>'
          '    </RegexBlock>'
          ''
          ''
          '    <SkipSyntaxToken token='#39'comment'#39' />'
          ''
          '    <SyntaxBlock capture="true">'
          '        <Start> '
          '            [ preprocessor:if  preprocessor:ifdef  ]'
          '        </Start>'
          ''
          '        <End> [ preprocessor:ifend  preprocessor:endif ] </End>'
          '    </SyntaxBlock>'
          ''
          ''
          '    <SyntaxBlock capture="true">'
          '        <Start> [ kw:class  kw:struct ]'
          '                [^ sym:; ]+ sym:\{ '
          '        </Start>'
          ''
          '        <End> sym:} </End>'
          '    </SyntaxBlock>'
          ''
          '        '
          '    <SyntaxBlock capture="true">'
          '        <Start> id  '
          '                sym:(  '
          '                    [^ sym:;    sym:}   sym:{   ]*  '
          '                sym:) '
          '                ( '
          '                    sym:: '
          '                    [^ sym:;    sym:}   sym:{   ]+   '
          '                )? '
          '                sym:{'
          '        </Start>'
          ''
          '        <End> sym:\}  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="true" priority='#39'10'#39'>'
          '        <Start>                 '
          
            '            [ kw:while  kw:do kw:if  kw:else  kw:namespace  kw:t' +
            'ry kw:catch  kw:__try  kw:__finally   kw:switch ]'
          '                                '
          '            [^ sym:;  sym:}  ]*?    sym:\{'
          '        </Start>'
          ''
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          '        '
          ''
          
            '    <SyntaxBlock capture="true" priority='#39'100'#39'  startGroupUsed='#39 +
            '1'#39'>'
          '        <Start>'
          
            '                    (  [ kw:while  kw:if  ]  sym:(   [^  sym:;  ' +
            ' sym:}    sym:{   ]+ sym:)   )    '
          ''
          '                    [^ sym:{  sym:}  sym:; ]+ sym:;'
          ''
          '             '
          '        </Start>'
          ''
          '        <End> sym:;  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="false" priority='#39'0'#39'  >'
          '        <Start> sym:{  </Start>'
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          ''
          '  </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'EcmaScript'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '      <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>'
          '            <Regex token0='#39'email'#39'>'
          '                [_a-zA-Z\d\-\.]{1,40}'
          '                @ '
          '                ([_ a-z A-Z \d \-]+ '
          '                (\. [_ a-z A-Z \d \-]+ )+ )'
          '            </Regex>                '
          '      </Scheme>'
          ''
          '      <Scheme name='#39'Numbers'#39'>'
          
            '        <Regex token0='#39'number'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [' +
            'lLdDfF]? ) \b</Regex>'
          
            '        <Regex token0='#39'number'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\' +
            '-]? \d+) \b</Regex>'
          '      </Scheme>'
          ''
          
            '      <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'commen' +
            't'#39'>'
          
            '        <Regex token0='#39'st'#39' regex='#39' \/\* | \*\/   '#39' />           ' +
            '     '
          '                '
          '         <SyntaxBlock capture="true">'
          '            <Start> st:/*  </Start>'
          '            <End> st:*/  </End>'
          '         </SyntaxBlock>                '
          '      </Scheme>'
          ''
          
            '      <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'string'#39 +
            '>'
          
            '        <Regex token0='#39'escaped'#39' priority='#39'10'#39' regex='#39'\\\\'#39' />   ' +
            '   '
          '        <Regex token0='#39'escaped'#39' regex='#39'\\[a-z &quot; ]'#39' />    '
          '        <Regex token0='#39'escaped'#39' regex='#39'\\0x[a-fA-F0-9]+'#39' />'
          '      </Scheme>'
          ''
          
            '      <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'ba' +
            'dString'#39'>'
          '      </Scheme>'
          ''
          '      <Scheme name='#39'StringFind'#39'>'
          '        <Regex innerScheme='#39'BadString'#39' > '
          '            (&quot;|&apos;) (.*?\\ \1 )*? .* $ '
          '        </Regex>'
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '            (&quot;|&apos;) (.*?\\ \1 )*? \1'
          '        </Regex>'
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '            (&quot;|&apos;) (.*?\\ \1 )*? .*? [^\\] \1'
          '        </Regex>  '
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '            (&quot;|&apos;) \1'
          '        </Regex>'
          '        '
          '      </Scheme>'
          ''
          '    <Scheme name='#39'RegexFind'#39' defaultToken='#39'defaultEmbed'#39'>'
          '        <Regex token0='#39'escaped'#39' regex='#39'\\/'#39' />            '
          '    </Scheme>'
          '    '
          
            '    <Scheme name='#39'RegexSubst'#39' inherit='#39'RegexFind'#39' defaultToken='#39 +
            'defaultEmbed'#39'>'
          '        <Regex token0='#39'escaped'#39' regex='#39'\$\d'#39' />                '
          '    </Scheme>'
          ''
          '    <Scheme name='#39'DefaultEmpty'#39' defaultToken='#39'default'#39' />'
          '    '
          '    <Scheme name='#39'Main'#39' inherit='#39'StringFind'#39' '
          '            defaultToken='#39'default'#39'           '
          ''
          '            keywordsIgnoreCase='#39'false'#39
          '    >'
          '    <KeywordRegex>\b[a-zA-Z_][\w_]*\b</KeywordRegex>'
          ''
          '    <Keywords>'
          '            Boolean'
          '            Array'
          '            join length reverse sort'
          '            NaN '
          '            null '
          '            true false '
          '            Infinity '
          '            undefined '
          '            Break '#9#9'continue '#9#9#9'for  in  if else return  while '
          '            '
          '            function new this var with  arguments '
          '            '
          '            Global escape unescape eval Number '
          '            Object new instanceof  delete typeof void '#9#9#9
          '            throw  try catch finally with'
          '    </Keywords>'
          ''
          ''
          '    <Regex innerScheme='#39'Comment'#39' regex='#39'//.*$'#39' />'
          ''
          ''
          '    <RegexBlock start='#39'\/\*'#39' end='#39'\*\/'#39' end_token0='#39'comment'#39' '
          '                innerScheme='#39'Comment'#39'/>'
          ''
          
            '    <Regex token0='#39'symbol'#39' regex='#39'[   \}   \{    \]    \[  \( \)' +
            ' &gt; &lt; ]'#39' />'
          '    <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          ''
          '    <RegexBlock innerScheme='#39'DefaultEmpty'#39' '
          '                start_token0='#39'symbol'#39
          '                end_token0='#39'symbol'#39' '
          '                priority='#39'100'#39
          '                chainBlock='#39'RegexFindEnd'#39
          '    >'
          ''
          '        <Start> \s* ([ =( ]) \s* (?= / )  </Start>        '
          '        <End> (?= / )  </End>        '
          '    </RegexBlock>'
          '    '
          '    <ChainBlock name='#39'RegexFindEnd'#39' '
          '                innerScheme='#39'RegexFind'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '                chainBlock='#39'RegexFindEnd2'#39
          '    >'
          '        <End> / </End>        '
          '    </ChainBlock>'
          ''
          '    <ChainBlock name='#39'RegexFindEnd2'#39' '
          '                innerScheme='#39'RegexFind'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '    >'
          '        <End> /[igmx]* </End>        '
          '    </ChainBlock>'
          '        '
          '    <ChainBlock name='#39'RegexSubstEnd'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '                innerScheme='#39'RegexSubst'#39'  >'
          '        <End> /[igmx]* </End>        '
          '    </ChainBlock>'
          '    '
          '    <RegexBlock innerScheme='#39'RegexFind'#39' '
          '                start_token0='#39'regexStart'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '                chainBlock='#39'RegexSubstEnd'#39'>'
          ''
          '        <Start> s/  </Start>        '
          '        <End> /[igmx]* </End>        '
          '    </RegexBlock>'
          ''
          ''
          '    <SkipSyntaxToken token='#39'comment'#39' />'
          ''
          '    <SyntaxBlock capture="true">'
          '        <Start> kw:function  id  '
          '                sym:(  '
          '                        [^ sym:;    sym:}   sym:{   ]*  '
          '                sym:) '
          '                sym:{'
          '        </Start>'
          ''
          '        <End> sym:\}  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="true" priority='#39'10'#39'>'
          '        <Start>                 '
          
            '            [ kw:while  kw:do kw:if  kw:else  kw:try kw:catch  k' +
            'w:finally  kw:switch ]'
          '                                '
          '            [^ sym:;  sym:}  ]*?    sym:\{'
          '        </Start>'
          ''
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          '        '
          ''
          
            '    <SyntaxBlock capture="true" priority='#39'100'#39'  startGroupUsed='#39 +
            '1'#39'>'
          '        <Start>'
          
            '                    (  [ kw:while  kw:if  kw:with ]  sym:(   [^ ' +
            ' sym:;   sym:}    sym:{   ]+ sym:)   )    '
          ''
          '                    [^ sym:{  sym:}  sym:; ]+ sym:;'
          ''
          '            '
          '        </Start>'
          ''
          '        <End> sym:;  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="false" priority='#39'0'#39'  >'
          '        <Start> sym:{  </Start>'
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          ''
          '    </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'INI'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ' '
          '<SchemeList root='#39'Main'#39'>'
          ''
          '  <Scheme name='#39'Numbers'#39'>'
          
            '    <Regex token0='#39'tagOpen'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [lLd' +
            'DfF]? ) \b</Regex>'
          
            '    <Regex token0='#39'tagOpen'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\-]?' +
            ' \d+) \b</Regex>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'BaseSyntax'#39' inherit='#39'Numbers'#39'>'
          ''
          '    <RegexBlock innerScheme='#39'Comment'#39' end_token0='#39'comment'#39' >'
          '        <Start> ^\#  </Start>        '
          '        <End> $ </End>        '
          '    </RegexBlock>'
          ''
          '    <RegexBlock innerScheme='#39'Comment'#39' end_token0='#39'comment'#39' >'
          '        <Start> ^;  </Start>        '
          '        <End> $ </End>        '
          '    </RegexBlock>'
          ''
          '    <RegexBlock innerScheme='#39'Url'#39' end_token0='#39'url'#39' >'
          '        <Start> ^\[  </Start>        '
          '        <End> \]$ </End>        '
          '    </RegexBlock>'
          ''
          '  </Scheme>    '
          ''
          
            '  <Scheme name='#39'String'#39' inherit='#39'BaseSyntax'#39' defaultToken='#39'strin' +
            'g'#39'>'
          '  </Scheme>'
          ''
          
            '  <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'badStr' +
            'ing'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'StringFind'#39'>'
          '    <Regex innerScheme='#39'BadString'#39' > '
          '        &quot; (.*?\\ &quot; )*? .* $ '
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '        &quot; (.*?\\ &quot; )*? &quot; c?'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '        &quot; (.*?\\ &quot; )*? .*? [^\\] &quot; c?'
          '    </Regex>  '
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '        &quot;  &quot; c?'
          '    </Regex>    '
          '  </Scheme>'
          '  '
          '  <Scheme name='#39'Comment'#39' defaultToken='#39'comment'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Url'#39' defaultToken='#39'url'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Main'#39' defaultToken='#39'default'#39
          '          inherit='#39'BaseSyntax'#39' inherit0='#39'StringFind'#39
          '          keywordsIgnoreCase='#39'true'#39' >'
          '  </Scheme>'
          '  '
          '</SchemeList>')
      end
      item
        Name = 'DFM'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          ''
          '    <Scheme name='#39'Numbers'#39'>'
          '        <Regex token0='#39'number'#39'>'
          '            \b (0x \d+ [lL]? | \d+ (e \d*)? [lLdDfF]? ) \b'
          '        </Regex>'
          '        '
          '        <Regex token0='#39'number'#39'>'
          '            \b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? \d+) \b'
          '        </Regex>'
          '    </Scheme>'
          ''
          '    <Scheme name='#39'String'#39' defaultToken='#39'string'#39'>'
          '    </Scheme>'
          ''
          '    <Scheme name='#39'Binary'#39' defaultToken='#39'comment'#39'>        '
          '        <SyntaxBlock capture="true">'
          '            <Start> commentStart  </Start>'
          '            <End> commentEnd  </End>'
          '        </SyntaxBlock>        '
          '    </Scheme>'
          ''
          '    <Scheme name='#39'Main'#39' inherit='#39'Numbers'#39' '
          '            defaultToken='#39'default'#39'           '
          ''
          '            keywordsIgnoreCase='#39'true'#39
          '    >'
          '        <KeywordRegex>\b[a-zA-Z_]\w*\b</KeywordRegex>'
          ''
          '        <Keywords>    '
          '            object  end item'
          '        </Keywords>'
          ''
          '        <RegexBlock innerScheme='#39'String'#39' start_token0='#39'string'#39' '
          '                    end_token0='#39'string'#39' >'
          ''
          '            <Start> &apos;  </Start>        '
          '            <End> &apos; </End>        '
          '        </RegexBlock>'
          ''
          
            '        <RegexBlock innerScheme='#39'Binary'#39' start_token0='#39'commentSt' +
            'art'#39' '
          '                    end_token0='#39'commentEnd'#39' >'
          '            <Start> \{  </Start>        '
          '            <End> \} </End>        '
          '        </RegexBlock>'
          ''
          
            '        <Regex token0='#39'symbol'#39' regex='#39'[   \]  \#  \[  \( \) &gt;' +
            ' &lt; ]'#39' />'
          '        <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          '        '
          '        <SyntaxBlock capture="true">'
          '            <Start> [ kw:item kw:object ] </Start>'
          '            <End> kw:end  </End>'
          '        </SyntaxBlock>'
          ''
          '        <SyntaxBlock capture="true">'
          '            <Start> sym:&lt;  </Start>'
          '            <End> sym:&gt;  </End>'
          '        </SyntaxBlock>'
          ''
          '        <SyntaxBlock capture="true">'
          '            <Start> sym:(  </Start>'
          '            <End> sym:)  </End>'
          '        </SyntaxBlock>'
          ''
          '    </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'Batch'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '  <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>'
          '        <Regex token0='#39'email'#39'>'
          '            [_a-zA-Z\d\-\.]{1,40}'
          '            @ '
          '            ([_ a-z A-Z \d \-]+ '
          '            (\. [_ a-z A-Z \d \-]+ )+ )'
          '        </Regex>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'Numbers'#39'>'
          
            '    <Regex token0='#39'number'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [lLdD' +
            'fF]? ) \b</Regex>'
          
            '    <Regex token0='#39'number'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? ' +
            '\d+) \b</Regex>'
          '  </Scheme>'
          ''
          
            '  <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'comment'#39'  ' +
            '/>'
          ''
          '  <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'escaped'#39'>'
          '  </Scheme>'
          ''
          
            '  <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'badStr' +
            'ing'#39'>'
          '  </Scheme>'
          ''
          '  <Scheme name='#39'StringFind'#39'>'
          '    <Regex innerScheme='#39'BadString'#39' > '
          '        &quot; (.*?\\ &quot; )*? .* $ '
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '        &quot; (.*?\\ &quot; )*? &quot; c?'
          '    </Regex>'
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '        &quot; (.*?\\ &quot; )*? .*? [^\\] &quot; c?'
          '    </Regex>  '
          ''
          '    <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '        &quot;  &quot; c?'
          '    </Regex>    '
          '  </Scheme>'
          ''
          ''
          ''
          '  <Scheme name='#39'Main'#39' inherit='#39'Numbers'#39' inherit0='#39'StringFind'#39
          '          defaultToken='#39'default'#39'           '
          ''
          '          allIgnoreCase='#39'true'#39
          '  >'
          
            '    <KeywordRegex moreWordChars='#39'.'#39'>\b[a-zA-Z_][\w_]*\b</Keyword' +
            'Regex>'
          ''
          '    <Keywords>'
          '            rem set if else exist errorlevel'
          '            for in do break call copy chcp cd'
          '            chdir choice cls country ctty date del'
          '            erase dir echo exit goto loadfix loadhigh'
          '            mkdir md move path pause prompt rename ren'
          '            rmdir rd shift time type ver verify vol'
          '            com con lpt nul defined not errorlevel'
          '            cmdextversion'
          '            '
          '    </Keywords>'
          ''
          ''
          '    <Regex innerScheme='#39'Comment'#39' regex='#39'Rem.*$'#39' />'
          '    <Regex innerScheme='#39'Comment'#39' regex="\:\:.*$ " />'
          ''
          '    <Regex token0='#39'keyword'#39' regex="^\s*\b[a-zA-Z_][\w_]*\b" />'
          ''
          
            '    <Regex token0='#39'symbol'#39' regex='#39'[    \]    \[  \( \) &gt; &lt;' +
            '  &amp; ]'#39' />'
          '    <Regex token0='#39'symbol'#39' regex='#39'[-=+^;,]'#39' />'
          ''
          '    <SkipSyntaxToken token='#39'comment'#39' />'
          ''
          '     <SyntaxBlock capture="true" priority='#39'0'#39'  >'
          '        <Start> sym:(  </Start>'
          '        <End> sym:)  </End>'
          '    </SyntaxBlock>'
          '    '
          '  </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'JavaScript'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '      <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>'
          '            <Regex token0='#39'email'#39'>'
          '                [_a-zA-Z\d\-\.]{1,40}'
          '                @ '
          '                ([_ a-z A-Z \d \-]+ '
          '                (\. [_ a-z A-Z \d \-]+ )+ )'
          '            </Regex>                '
          '      </Scheme>'
          ''
          '      <Scheme name='#39'Numbers'#39'>'
          
            '        <Regex token0='#39'number'#39'>\b (0x \d+ [lL]? | \d+ (e \d*)? [' +
            'lLdDfF]? ) \b</Regex>'
          
            '        <Regex token0='#39'number'#39'>\b [+\-]? \d+ (\. \d+)? ([eE] [+\' +
            '-]? \d+) \b</Regex>'
          '      </Scheme>'
          ''
          
            '      <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'commen' +
            't'#39'>'
          
            '        <Regex token0='#39'st'#39' regex='#39' \/\* | \*\/   '#39' />           ' +
            '     '
          '                '
          '         <SyntaxBlock capture="true">'
          '            <Start> st:/*  </Start>'
          '            <End> st:*/  </End>'
          '         </SyntaxBlock>                '
          '      </Scheme>'
          ''
          
            '      <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'string'#39 +
            '>'
          
            '        <Regex token0='#39'escaped'#39' priority='#39'10'#39' regex='#39'\\\\'#39' />   ' +
            '   '
          '        <Regex token0='#39'escaped'#39' regex='#39'\\[a-z &quot; ]'#39' />    '
          '        <Regex token0='#39'escaped'#39' regex='#39'\\0x[a-fA-F0-9]+'#39' />'
          '      </Scheme>'
          ''
          
            '      <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'ba' +
            'dString'#39'>'
          '      </Scheme>'
          ''
          '      <Scheme name='#39'StringFind'#39'>'
          '        <Regex innerScheme='#39'BadString'#39' > '
          '            (&quot;|&apos;) (.*?\\ \1 )*? .* $ '
          '        </Regex>'
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '            (&quot;|&apos;) (.*?\\ \1 )*? \1'
          '        </Regex>'
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '            (&quot;|&apos;) (.*?\\ \1 )*? .*? [^\\] \1'
          '        </Regex>  '
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '            (&quot;|&apos;) \1'
          '        </Regex>'
          '        '
          '      </Scheme>'
          ''
          '    <Scheme name='#39'RegexFind'#39' defaultToken='#39'defaultEmbed'#39'>'
          '        <Regex token0='#39'escaped'#39' regex='#39'\\/'#39' />            '
          '    </Scheme>'
          '    '
          
            '    <Scheme name='#39'RegexSubst'#39' inherit='#39'RegexFind'#39' defaultToken='#39 +
            'defaultEmbed'#39'>'
          '        <Regex token0='#39'escaped'#39' regex='#39'\$\d'#39' />                '
          '    </Scheme>'
          ''
          '    <Scheme name='#39'DefaultEmpty'#39' defaultToken='#39'default'#39' />'
          '    '
          '    <Scheme name='#39'Main'#39' inherit='#39'StringFind'#39' '
          '            defaultToken='#39'default'#39'           '
          ''
          '            keywordsIgnoreCase='#39'false'#39
          '    >'
          '    <KeywordRegex>\b[a-zA-Z_][\w_]*\b</KeywordRegex>'
          ''
          '    <Keywords>'
          '            Boolean'
          '            Array'
          '            join length reverse sort'
          '            NaN '
          '            null '
          '            true false '
          '            Infinity '
          '            undefined '
          '            Break '#9#9'continue '#9#9#9'for  in  if else return  while '
          '            '
          '            function new this var with  arguments '
          '            '
          '            Global escape unescape eval Number '
          '            Object new instanceof  delete typeof void '#9#9#9
          '            throw  try catch finally with'
          '    </Keywords>'
          ''
          ''
          '    <Regex innerScheme='#39'Comment'#39' regex='#39'//.*$'#39' />'
          ''
          ''
          '    <RegexBlock start='#39'\/\*'#39' end='#39'\*\/'#39' end_token0='#39'comment'#39' '
          '                innerScheme='#39'Comment'#39'/>'
          ''
          
            '    <Regex token0='#39'symbol'#39' regex='#39'[   \}   \{    \]    \[  \( \)' +
            ' &gt; &lt; ]'#39' />'
          '    <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          ''
          '    <RegexBlock innerScheme='#39'DefaultEmpty'#39' '
          '                start_token0='#39'symbol'#39
          '                end_token0='#39'symbol'#39' '
          '                priority='#39'100'#39
          '                chainBlock='#39'RegexFindEnd'#39
          '    >'
          ''
          '        <Start> \s* ([ =( ]) \s* (?= / )  </Start>        '
          '        <End> (?= / )  </End>        '
          '    </RegexBlock>'
          '    '
          '    <ChainBlock name='#39'RegexFindEnd'#39' '
          '                innerScheme='#39'RegexFind'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '                chainBlock='#39'RegexFindEnd2'#39
          '    >'
          '        <End> / </End>        '
          '    </ChainBlock>'
          ''
          '    <ChainBlock name='#39'RegexFindEnd2'#39' '
          '                innerScheme='#39'RegexFind'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '    >'
          '        <End> /[igmx]* </End>        '
          '    </ChainBlock>'
          '        '
          '    <ChainBlock name='#39'RegexSubstEnd'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '                innerScheme='#39'RegexSubst'#39'  >'
          '        <End> /[igmx]* </End>        '
          '    </ChainBlock>'
          '    '
          '    <RegexBlock innerScheme='#39'RegexFind'#39' '
          '                start_token0='#39'regexStart'#39' '
          '                end_token0='#39'regexEnd'#39' '
          '                chainBlock='#39'RegexSubstEnd'#39'>'
          ''
          '        <Start> s/  </Start>        '
          '        <End> /[igmx]* </End>        '
          '    </RegexBlock>'
          ''
          ''
          '    <SkipSyntaxToken token='#39'comment'#39' />'
          ''
          '    <SyntaxBlock capture="true">'
          '        <Start> kw:function  id  '
          '                sym:(  '
          '                        [^ sym:;    sym:}   sym:{   ]*  '
          '                sym:) '
          '                sym:{'
          '        </Start>'
          ''
          '        <End> sym:\}  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="true" priority='#39'10'#39'>'
          '        <Start>                 '
          
            '            [ kw:while  kw:do kw:if  kw:else  kw:try kw:catch  k' +
            'w:finally  kw:switch ]'
          '                                '
          '            [^ sym:;  sym:}  ]*?    sym:\{'
          '        </Start>'
          ''
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          '        '
          ''
          
            '    <SyntaxBlock capture="true" priority='#39'100'#39'  startGroupUsed='#39 +
            '1'#39'>'
          '        <Start>'
          
            '                    (  [ kw:while  kw:if  kw:with ]  sym:(   [^ ' +
            ' sym:;   sym:}    sym:{   ]+ sym:)   )    '
          ''
          '                    [^ sym:{  sym:}  sym:; ]+ sym:;'
          ''
          '            '
          '        </Start>'
          ''
          '        <End> sym:;  </End>'
          '    </SyntaxBlock>'
          ''
          '    <SyntaxBlock capture="false" priority='#39'0'#39'  >'
          '        <Start> sym:{  </Start>'
          '        <End> sym:}  </End>'
          '    </SyntaxBlock>'
          ''
          '    </Scheme>'
          '</SchemeList>')
      end
      item
        Name = 'Python'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          ''
          '<SchemeList root='#39'Main'#39'>'
          ''
          '    <Scheme name='#39'Text'#39' inherit='#39'Numbers'#39'>                '
          '    '
          '        <Regex token0='#39'email'#39'>'
          '            [_a-zA-Z\d\-\.]{1,40}'
          '            @ '
          '            ([_ a-z A-Z \d \-]+ '
          '            (\. [_ a-z A-Z \d \-]+ )+ )'
          '        </Regex>'
          '    </Scheme>'
          ''
          '    <Scheme name='#39'Numbers'#39'>'
          '        <Regex token0='#39'number'#39'>'
          '            \b (0x \d+ [lL]? | \d+ (e \d*)? [lLdDfF]? ) \b'
          '        </Regex>'
          '        '
          '        <!-- [jJ] are Python imaginary literals -->'
          '        <Regex token0='#39'number'#39'>'
          '            \b [+\-]? \d+ (\. \d+)? ([eE] [+\-]? \d+)? [jJ]? \b'
          '        </Regex>'
          '    </Scheme>'
          ''
          
            '    <Scheme name='#39'Comment'#39' inherit='#39'Text'#39' defaultToken='#39'comment'#39 +
            '  />'
          ''
          '    <Scheme name='#39'String'#39' inherit='#39'Text'#39' defaultToken='#39'string'#39'>'
          '        <Regex token0='#39'escaped'#39' regex='#39'\\[a-zA-Z0-9 &quot; ]'#39' />'
          
            '        <Regex token0='#39'escaped'#39' regex='#39'\\N\{[a-zA-Z_]+\}'#39' priori' +
            'ty='#39'10'#39' />'
          
            '        <Regex token0='#39'escaped'#39' regex='#39'\\u[0-9a-fA-F]{4}'#39' priori' +
            'ty='#39'10'#39' />        '
          
            '        <Regex token0='#39'escaped'#39' regex='#39'\\U[0-9a-fA-F]{8}'#39' priori' +
            'ty='#39'10'#39' />                '
          
            '        <Regex token0='#39'escaped'#39' regex='#39'\\x[0-9a-fA-F]{2}'#39' priori' +
            'ty='#39'10'#39' />'
          
            '        <Regex token0='#39'escaped'#39' regex='#39'\\o[0-7]{2}'#39' priority='#39'10' +
            #39' />'
          '    </Scheme>'
          ''
          
            '    <Scheme name='#39'BadString'#39' inherit='#39'String'#39' defaultToken='#39'badS' +
            'tring'#39'>'
          '    </Scheme>'
          ''
          '    <Scheme name='#39'BaseSyntax'#39' inherit='#39'Numbers'#39'>'
          '        <Regex innerScheme='#39'Comment'#39' regex='#39'\#.*$'#39' />'
          '        '
          
            '        <Regex token0='#39'privateSymbol'#39' regex='#39'\b_\w+\b'#39' />       ' +
            ' '
          
            '        <Regex token0='#39'privateSymbol'#39' regex='#39'\b__\w+(__)?\b'#39' /> ' +
            '       '
          
            '        <Regex token0='#39'keyword'#39' priority='#39'10'#39' regex='#39'\b__\w+__\b' +
            #39' />        '
          ''
          
            '        <Regex token0='#39'symbol'#39' regex='#39'[   \}   \{    \]    \[  \' +
            '( \) &gt; &lt; ]'#39' />'
          '        <Regex token0='#39'symbol'#39' regex='#39'[-:?\~=+!^;,]'#39' />'
          ''
          ''
          '        <Regex innerScheme='#39'BadString'#39' > '
          '            (u|ur)? (&quot;|&apos;) (.*?\\ \2 )*? .* $ '
          '        </Regex>'
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'10'#39'> '
          '            (u|ur)? (&quot;|&apos;) (.*?\\ \2 )*? \2 '
          '        </Regex>'
          ''
          '        <Regex innerScheme='#39'String'#39' priority='#39'20'#39'> '
          '            (u|ur)? (&quot;|&apos;) (.*?\\ \2 )*? .*? [^\\] \2 '
          '        </Regex>'
          '        '
          '        <Regex innerScheme='#39'String'#39' priority='#39'30'#39'> '
          '            (u|ur)? (&quot;|&apos;)  \2 '
          '        </Regex>'
          ''
          '        '
          '        <RegexBlock innerScheme='#39'String'#39' '
          '                    priority='#39'100'#39
          
            '                    start_token0='#39'string'#39'                       ' +
            '  '
          '                    end_token0='#39'string'#39' >'
          ''
          
            '            <Start> (u|ur)? ( &quot;{3} | &apos;{3} ) </Start>  ' +
            '      '
          '            <End> $2 </End>        '
          '        </RegexBlock>'
          ''
          '    </Scheme>'
          '    '
          '    <Scheme name='#39'Main'#39' inherit='#39'BaseSyntax'#39' '
          '            defaultToken='#39'default'#39'           '
          ''
          '            keywordsIgnoreCase='#39'false'#39
          '    >'
          '        <KeywordRegex>\b[a-zA-Z_][\w_]*\b</KeywordRegex>'
          ''
          '        <Keywords>    '
          '            and       del       from      not       while    '
          '            as        elif      global    or        with     '
          '            assert    else      if        pass      yield    '
          '            break     except    import    print              '
          '            class     exec      in        raise              '
          '            continue  finally   is        return             '
          '            def       for       lambda    try      '
          '        </Keywords>'
          ''
          '    </Scheme>'
          '</SchemeList>')
      end>
    ColorSchemes = <
      item
        Name = 'default'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          '<Attributes>'
          #9'<Token name="default" textColor="#0"/>'
          #9'<Token name="defaultEmbed" backgroundColor="#ECE9D8"/>'
          #9'<Token name="docStart" fontStyle="bold"/>'
          #9'<Token name="docEnd" fontStyle="bold"/>'
          #9'<Token name="docBlockStart" fontStyle="bold"/>'
          #9'<Token name="docBlockEnd" fontStyle="bold"/>'
          #9'<Token name="docInstruction" fontStyle="bold"/>'
          #9'<Token name="docDefault" backgroundColor="#ECE9D8"/>'
          #9'<Token name="comment" textColor="#008000"/>'
          #9'<Token name="commentStart" textColor="#008000"/>'
          #9'<Token name="commentEnd" textColor="#008000"/>'
          #9'<Token name="keyword" textColor="Navy" fontStyle="bold"/>'
          #9'<Token name="privateSymbol" textColor="Navy"/>'
          #9'<Token name="email" fontStyle="bold"/>'
          
            #9'<Token name="hairy" textColor="#000080" fontStyle="bold, italic' +
            ', underline, strikeOut"/>'
          #9'<Token name="number" textColor="Maroon"/>'
          #9'<Token name="symbol" textColor="Blue"/>'
          #9'<Token name="string" textColor="Gray"/>'
          #9'<Token name="blockStart" fontStyle="bold"/>'
          #9'<Token name="blockEnd" fontStyle="bold"/>'
          #9'<Token name="badString" textColor="Red"/>'
          #9'<Token name="preprocessor" textColor="#008080"/>'
          #9'<Token name="badPreprocessor" textColor="red"/>'
          #9'<Token name="escaped" textColor="Navy"/>'
          
            #9'<Token name="quotedVariable" textColor="Navy" fontStyle="bold"/' +
            '>'
          #9'<Token name="regexStart" textColor="Navy" fontStyle="bold"/>'
          
            #9'<Token name="regexEnd" textColor="Navy" fontStyle="bold"/><!--h' +
            'tml/xml tokens-->'
          #9'<Token name="tagOpen" textColor="Blue"/>'
          #9'<Token name="tagClose" textColor="Blue"/>'
          
            #9'<Token name="dtdTagStartEnd" textColor="Purple" fontStyle="bold' +
            '"/>'
          #9'<Token name="url" textColor="Red"/>'
          #9'<Token name="fpi" textColor="Red" fontStyle="bold"/>'
          #9'<Token name="entity" textColor="#FF4500"/>'
          #9'<Token name="attributeName" textColor="Red"/>'
          
            #9'<Token name="attributeValue" textColor="#8000FF" fontStyle="bol' +
            'd"/>'
          #9'<Token name="badAttributeValue" textColor="Red"/>'
          #9'<Token name="cssRule" textColor="#583485" fontStyle="bold"/>'
          #9'<Token name="cssRelSymbol" fontStyle="bold"/>'
          #9'<Token name="cssUrlHref" fontStyle="underline"/>'
          #9'<Token name="cssUrlAttr"/>'
          #9'<Token name="cssAttrListBG" textColor="Blue"/>'
          
            #9'<Token name="cdataTagStart" textColor="Purple" fontStyle="bold"' +
            '/>'
          #9'<Token name="cdataTagEnd" textColor="Purple" fontStyle="bold"/>'
          
            #9'<Token name="xmlDeclStart" backgroundColor="Yellow" textColor="' +
            'Red" fontStyle="bold"/>'
          
            #9'<Token name="xmlDeclEnd" backgroundColor="Yellow" textColor="Re' +
            'd" fontStyle="bold"/>'
          '</Attributes>')
      end
      item
        Name = 'Lua'
        Scheme.Strings = (
          '<?xml version="1.0" encoding="UTF-8"?>'
          '<Attributes><!--html/xml tokens-->'
          #9'<Token name="comment" textColor="Green" fontStyle="bold"/>'
          #9'<Token name="string" textColor="Gray"/>'
          #9'<Token name="keyword" textColor="Blue" fontStyle="bold"/>'
          #9'<Token name="number" textColor="#FF8000"/>'
          '</Attributes>')
      end>
    ActiveSyntaxScheme = 'Text'
    ActiveColorScheme = 'default'
    OnDocChanged = EditDoc1DocChanged
    Left = 224
    Top = 120
  end
end
